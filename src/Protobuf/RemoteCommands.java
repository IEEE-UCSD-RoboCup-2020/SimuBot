package Protobuf;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_commands.proto

public final class RemoteCommands {
  private RemoteCommands() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface vec2dOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vec2d)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    float getY();
  }
  /**
   * Protobuf type {@code vec2d}
   */
  public  static final class vec2d extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vec2d)
      vec2dOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use vec2d.newBuilder() to construct.
    private vec2d(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private vec2d() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new vec2d();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private vec2d(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              x_ = input.readFloat();
              break;
            }
            case 21: {

              y_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_vec2d_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_vec2d_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.vec2d.class, RemoteCommands.vec2d.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    public float getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0F) {
        output.writeFloat(1, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.vec2d)) {
        return super.equals(obj);
      }
      RemoteCommands.vec2d other = (RemoteCommands.vec2d) obj;

      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.vec2d parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.vec2d parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.vec2d parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.vec2d parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.vec2d parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.vec2d parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.vec2d parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.vec2d parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.vec2d parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.vec2d parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.vec2d parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.vec2d parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.vec2d prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code vec2d}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vec2d)
        RemoteCommands.vec2dOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_vec2d_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_vec2d_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.vec2d.class, RemoteCommands.vec2d.Builder.class);
      }

      // Construct using RemoteCommands.vec2d.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;

        y_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_vec2d_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.vec2d getDefaultInstanceForType() {
        return RemoteCommands.vec2d.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.vec2d build() {
        RemoteCommands.vec2d result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.vec2d buildPartial() {
        RemoteCommands.vec2d result = new RemoteCommands.vec2d(this);
        result.x_ = x_;
        result.y_ = y_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.vec2d) {
          return mergeFrom((RemoteCommands.vec2d)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.vec2d other) {
        if (other == RemoteCommands.vec2d.getDefaultInstance()) return this;
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.vec2d parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.vec2d) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vec2d)
    }

    // @@protoc_insertion_point(class_scope:vec2d)
    private static final RemoteCommands.vec2d DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.vec2d();
    }

    public static RemoteCommands.vec2d getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<vec2d>
        PARSER = new com.google.protobuf.AbstractParser<vec2d>() {
      @java.lang.Override
      public vec2d parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new vec2d(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<vec2d> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<vec2d> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.vec2d getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface polygonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:polygon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    java.util.List<RemoteCommands.vec2d> 
        getVerticesList();
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    RemoteCommands.vec2d getVertices(int index);
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    int getVerticesCount();
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
        getVerticesOrBuilderList();
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    RemoteCommands.vec2dOrBuilder getVerticesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code polygon}
   */
  public  static final class polygon extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:polygon)
      polygonOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use polygon.newBuilder() to construct.
    private polygon(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private polygon() {
      vertices_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new polygon();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private polygon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                vertices_ = new java.util.ArrayList<RemoteCommands.vec2d>();
                mutable_bitField0_ |= 0x00000001;
              }
              vertices_.add(
                  input.readMessage(RemoteCommands.vec2d.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          vertices_ = java.util.Collections.unmodifiableList(vertices_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_polygon_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_polygon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.polygon.class, RemoteCommands.polygon.Builder.class);
    }

    public static final int VERTICES_FIELD_NUMBER = 1;
    private java.util.List<RemoteCommands.vec2d> vertices_;
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    public java.util.List<RemoteCommands.vec2d> getVerticesList() {
      return vertices_;
    }
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    public java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
        getVerticesOrBuilderList() {
      return vertices_;
    }
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    public int getVerticesCount() {
      return vertices_.size();
    }
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    public RemoteCommands.vec2d getVertices(int index) {
      return vertices_.get(index);
    }
    /**
     * <pre>
     * vec2d here is used as point2d
     * </pre>
     *
     * <code>repeated .vec2d vertices = 1;</code>
     */
    public RemoteCommands.vec2dOrBuilder getVerticesOrBuilder(
        int index) {
      return vertices_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < vertices_.size(); i++) {
        output.writeMessage(1, vertices_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < vertices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vertices_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.polygon)) {
        return super.equals(obj);
      }
      RemoteCommands.polygon other = (RemoteCommands.polygon) obj;

      if (!getVerticesList()
          .equals(other.getVerticesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVerticesCount() > 0) {
        hash = (37 * hash) + VERTICES_FIELD_NUMBER;
        hash = (53 * hash) + getVerticesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.polygon parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.polygon parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.polygon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.polygon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.polygon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.polygon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.polygon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.polygon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.polygon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.polygon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.polygon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.polygon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.polygon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code polygon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:polygon)
        RemoteCommands.polygonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_polygon_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_polygon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.polygon.class, RemoteCommands.polygon.Builder.class);
      }

      // Construct using RemoteCommands.polygon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVerticesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (verticesBuilder_ == null) {
          vertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          verticesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_polygon_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.polygon getDefaultInstanceForType() {
        return RemoteCommands.polygon.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.polygon build() {
        RemoteCommands.polygon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.polygon buildPartial() {
        RemoteCommands.polygon result = new RemoteCommands.polygon(this);
        int from_bitField0_ = bitField0_;
        if (verticesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vertices_ = java.util.Collections.unmodifiableList(vertices_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vertices_ = vertices_;
        } else {
          result.vertices_ = verticesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.polygon) {
          return mergeFrom((RemoteCommands.polygon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.polygon other) {
        if (other == RemoteCommands.polygon.getDefaultInstance()) return this;
        if (verticesBuilder_ == null) {
          if (!other.vertices_.isEmpty()) {
            if (vertices_.isEmpty()) {
              vertices_ = other.vertices_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVerticesIsMutable();
              vertices_.addAll(other.vertices_);
            }
            onChanged();
          }
        } else {
          if (!other.vertices_.isEmpty()) {
            if (verticesBuilder_.isEmpty()) {
              verticesBuilder_.dispose();
              verticesBuilder_ = null;
              vertices_ = other.vertices_;
              bitField0_ = (bitField0_ & ~0x00000001);
              verticesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVerticesFieldBuilder() : null;
            } else {
              verticesBuilder_.addAllMessages(other.vertices_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.polygon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.polygon) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<RemoteCommands.vec2d> vertices_ =
        java.util.Collections.emptyList();
      private void ensureVerticesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vertices_ = new java.util.ArrayList<RemoteCommands.vec2d>(vertices_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> verticesBuilder_;

      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public java.util.List<RemoteCommands.vec2d> getVerticesList() {
        if (verticesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vertices_);
        } else {
          return verticesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public int getVerticesCount() {
        if (verticesBuilder_ == null) {
          return vertices_.size();
        } else {
          return verticesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public RemoteCommands.vec2d getVertices(int index) {
        if (verticesBuilder_ == null) {
          return vertices_.get(index);
        } else {
          return verticesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder setVertices(
          int index, RemoteCommands.vec2d value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.set(index, value);
          onChanged();
        } else {
          verticesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder setVertices(
          int index, RemoteCommands.vec2d.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.set(index, builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder addVertices(RemoteCommands.vec2d value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.add(value);
          onChanged();
        } else {
          verticesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder addVertices(
          int index, RemoteCommands.vec2d value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.add(index, value);
          onChanged();
        } else {
          verticesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder addVertices(
          RemoteCommands.vec2d.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.add(builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder addVertices(
          int index, RemoteCommands.vec2d.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.add(index, builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder addAllVertices(
          java.lang.Iterable<? extends RemoteCommands.vec2d> values) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vertices_);
          onChanged();
        } else {
          verticesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder clearVertices() {
        if (verticesBuilder_ == null) {
          vertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          verticesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public Builder removeVertices(int index) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.remove(index);
          onChanged();
        } else {
          verticesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public RemoteCommands.vec2d.Builder getVerticesBuilder(
          int index) {
        return getVerticesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public RemoteCommands.vec2dOrBuilder getVerticesOrBuilder(
          int index) {
        if (verticesBuilder_ == null) {
          return vertices_.get(index);  } else {
          return verticesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
           getVerticesOrBuilderList() {
        if (verticesBuilder_ != null) {
          return verticesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vertices_);
        }
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public RemoteCommands.vec2d.Builder addVerticesBuilder() {
        return getVerticesFieldBuilder().addBuilder(
            RemoteCommands.vec2d.getDefaultInstance());
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public RemoteCommands.vec2d.Builder addVerticesBuilder(
          int index) {
        return getVerticesFieldBuilder().addBuilder(
            index, RemoteCommands.vec2d.getDefaultInstance());
      }
      /**
       * <pre>
       * vec2d here is used as point2d
       * </pre>
       *
       * <code>repeated .vec2d vertices = 1;</code>
       */
      public java.util.List<RemoteCommands.vec2d.Builder> 
           getVerticesBuilderList() {
        return getVerticesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> 
          getVerticesFieldBuilder() {
        if (verticesBuilder_ == null) {
          verticesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder>(
                  vertices_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vertices_ = null;
        }
        return verticesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:polygon)
    }

    // @@protoc_insertion_point(class_scope:polygon)
    private static final RemoteCommands.polygon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.polygon();
    }

    public static RemoteCommands.polygon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<polygon>
        PARSER = new com.google.protobuf.AbstractParser<polygon>() {
      @java.lang.Override
      public polygon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new polygon(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<polygon> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<polygon> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.polygon getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface static_dataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:static_data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * play ground formed by Top/bottom touch lines + left/right goal lines
     * </pre>
     *
     * <code>.polygon play_area = 1;</code>
     * @return Whether the playArea field is set.
     */
    boolean hasPlayArea();
    /**
     * <pre>
     * play ground formed by Top/bottom touch lines + left/right goal lines
     * </pre>
     *
     * <code>.polygon play_area = 1;</code>
     * @return The playArea.
     */
    RemoteCommands.polygon getPlayArea();
    /**
     * <pre>
     * play ground formed by Top/bottom touch lines + left/right goal lines
     * </pre>
     *
     * <code>.polygon play_area = 1;</code>
     */
    RemoteCommands.polygonOrBuilder getPlayAreaOrBuilder();

    /**
     * <code>.polygon penalty_area = 2;</code>
     * @return Whether the penaltyArea field is set.
     */
    boolean hasPenaltyArea();
    /**
     * <code>.polygon penalty_area = 2;</code>
     * @return The penaltyArea.
     */
    RemoteCommands.polygon getPenaltyArea();
    /**
     * <code>.polygon penalty_area = 2;</code>
     */
    RemoteCommands.polygonOrBuilder getPenaltyAreaOrBuilder();

    /**
     * <pre>
     * use a polygon to represent circle
     * </pre>
     *
     * <code>.polygon center_circle = 3;</code>
     * @return Whether the centerCircle field is set.
     */
    boolean hasCenterCircle();
    /**
     * <pre>
     * use a polygon to represent circle
     * </pre>
     *
     * <code>.polygon center_circle = 3;</code>
     * @return The centerCircle.
     */
    RemoteCommands.polygon getCenterCircle();
    /**
     * <pre>
     * use a polygon to represent circle
     * </pre>
     *
     * <code>.polygon center_circle = 3;</code>
     */
    RemoteCommands.polygonOrBuilder getCenterCircleOrBuilder();

    /**
     * <pre>
     * consider a line as a polygon (length 2 point_array) as well
     * </pre>
     *
     * <code>.polygon center_line = 4;</code>
     * @return Whether the centerLine field is set.
     */
    boolean hasCenterLine();
    /**
     * <pre>
     * consider a line as a polygon (length 2 point_array) as well
     * </pre>
     *
     * <code>.polygon center_line = 4;</code>
     * @return The centerLine.
     */
    RemoteCommands.polygon getCenterLine();
    /**
     * <pre>
     * consider a line as a polygon (length 2 point_array) as well
     * </pre>
     *
     * <code>.polygon center_line = 4;</code>
     */
    RemoteCommands.polygonOrBuilder getCenterLineOrBuilder();

    /**
     * <pre>
     * a line object as well, once ball pass this bar, u score, yikes!
     * </pre>
     *
     * <code>.polygon cross_bar = 5;</code>
     * @return Whether the crossBar field is set.
     */
    boolean hasCrossBar();
    /**
     * <pre>
     * a line object as well, once ball pass this bar, u score, yikes!
     * </pre>
     *
     * <code>.polygon cross_bar = 5;</code>
     * @return The crossBar.
     */
    RemoteCommands.polygon getCrossBar();
    /**
     * <pre>
     * a line object as well, once ball pass this bar, u score, yikes!
     * </pre>
     *
     * <code>.polygon cross_bar = 5;</code>
     */
    RemoteCommands.polygonOrBuilder getCrossBarOrBuilder();

    /**
     * <code>int32 num_robots = 6;</code>
     * @return The numRobots.
     */
    int getNumRobots();
  }
  /**
   * Protobuf type {@code static_data}
   */
  public  static final class static_data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:static_data)
      static_dataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use static_data.newBuilder() to construct.
    private static_data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private static_data() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new static_data();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private static_data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              RemoteCommands.polygon.Builder subBuilder = null;
              if (playArea_ != null) {
                subBuilder = playArea_.toBuilder();
              }
              playArea_ = input.readMessage(RemoteCommands.polygon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playArea_);
                playArea_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              RemoteCommands.polygon.Builder subBuilder = null;
              if (penaltyArea_ != null) {
                subBuilder = penaltyArea_.toBuilder();
              }
              penaltyArea_ = input.readMessage(RemoteCommands.polygon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(penaltyArea_);
                penaltyArea_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              RemoteCommands.polygon.Builder subBuilder = null;
              if (centerCircle_ != null) {
                subBuilder = centerCircle_.toBuilder();
              }
              centerCircle_ = input.readMessage(RemoteCommands.polygon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(centerCircle_);
                centerCircle_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              RemoteCommands.polygon.Builder subBuilder = null;
              if (centerLine_ != null) {
                subBuilder = centerLine_.toBuilder();
              }
              centerLine_ = input.readMessage(RemoteCommands.polygon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(centerLine_);
                centerLine_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              RemoteCommands.polygon.Builder subBuilder = null;
              if (crossBar_ != null) {
                subBuilder = crossBar_.toBuilder();
              }
              crossBar_ = input.readMessage(RemoteCommands.polygon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(crossBar_);
                crossBar_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {

              numRobots_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_static_data_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_static_data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.static_data.class, RemoteCommands.static_data.Builder.class);
    }

    public static final int PLAY_AREA_FIELD_NUMBER = 1;
    private RemoteCommands.polygon playArea_;
    /**
     * <pre>
     * play ground formed by Top/bottom touch lines + left/right goal lines
     * </pre>
     *
     * <code>.polygon play_area = 1;</code>
     * @return Whether the playArea field is set.
     */
    public boolean hasPlayArea() {
      return playArea_ != null;
    }
    /**
     * <pre>
     * play ground formed by Top/bottom touch lines + left/right goal lines
     * </pre>
     *
     * <code>.polygon play_area = 1;</code>
     * @return The playArea.
     */
    public RemoteCommands.polygon getPlayArea() {
      return playArea_ == null ? RemoteCommands.polygon.getDefaultInstance() : playArea_;
    }
    /**
     * <pre>
     * play ground formed by Top/bottom touch lines + left/right goal lines
     * </pre>
     *
     * <code>.polygon play_area = 1;</code>
     */
    public RemoteCommands.polygonOrBuilder getPlayAreaOrBuilder() {
      return getPlayArea();
    }

    public static final int PENALTY_AREA_FIELD_NUMBER = 2;
    private RemoteCommands.polygon penaltyArea_;
    /**
     * <code>.polygon penalty_area = 2;</code>
     * @return Whether the penaltyArea field is set.
     */
    public boolean hasPenaltyArea() {
      return penaltyArea_ != null;
    }
    /**
     * <code>.polygon penalty_area = 2;</code>
     * @return The penaltyArea.
     */
    public RemoteCommands.polygon getPenaltyArea() {
      return penaltyArea_ == null ? RemoteCommands.polygon.getDefaultInstance() : penaltyArea_;
    }
    /**
     * <code>.polygon penalty_area = 2;</code>
     */
    public RemoteCommands.polygonOrBuilder getPenaltyAreaOrBuilder() {
      return getPenaltyArea();
    }

    public static final int CENTER_CIRCLE_FIELD_NUMBER = 3;
    private RemoteCommands.polygon centerCircle_;
    /**
     * <pre>
     * use a polygon to represent circle
     * </pre>
     *
     * <code>.polygon center_circle = 3;</code>
     * @return Whether the centerCircle field is set.
     */
    public boolean hasCenterCircle() {
      return centerCircle_ != null;
    }
    /**
     * <pre>
     * use a polygon to represent circle
     * </pre>
     *
     * <code>.polygon center_circle = 3;</code>
     * @return The centerCircle.
     */
    public RemoteCommands.polygon getCenterCircle() {
      return centerCircle_ == null ? RemoteCommands.polygon.getDefaultInstance() : centerCircle_;
    }
    /**
     * <pre>
     * use a polygon to represent circle
     * </pre>
     *
     * <code>.polygon center_circle = 3;</code>
     */
    public RemoteCommands.polygonOrBuilder getCenterCircleOrBuilder() {
      return getCenterCircle();
    }

    public static final int CENTER_LINE_FIELD_NUMBER = 4;
    private RemoteCommands.polygon centerLine_;
    /**
     * <pre>
     * consider a line as a polygon (length 2 point_array) as well
     * </pre>
     *
     * <code>.polygon center_line = 4;</code>
     * @return Whether the centerLine field is set.
     */
    public boolean hasCenterLine() {
      return centerLine_ != null;
    }
    /**
     * <pre>
     * consider a line as a polygon (length 2 point_array) as well
     * </pre>
     *
     * <code>.polygon center_line = 4;</code>
     * @return The centerLine.
     */
    public RemoteCommands.polygon getCenterLine() {
      return centerLine_ == null ? RemoteCommands.polygon.getDefaultInstance() : centerLine_;
    }
    /**
     * <pre>
     * consider a line as a polygon (length 2 point_array) as well
     * </pre>
     *
     * <code>.polygon center_line = 4;</code>
     */
    public RemoteCommands.polygonOrBuilder getCenterLineOrBuilder() {
      return getCenterLine();
    }

    public static final int CROSS_BAR_FIELD_NUMBER = 5;
    private RemoteCommands.polygon crossBar_;
    /**
     * <pre>
     * a line object as well, once ball pass this bar, u score, yikes!
     * </pre>
     *
     * <code>.polygon cross_bar = 5;</code>
     * @return Whether the crossBar field is set.
     */
    public boolean hasCrossBar() {
      return crossBar_ != null;
    }
    /**
     * <pre>
     * a line object as well, once ball pass this bar, u score, yikes!
     * </pre>
     *
     * <code>.polygon cross_bar = 5;</code>
     * @return The crossBar.
     */
    public RemoteCommands.polygon getCrossBar() {
      return crossBar_ == null ? RemoteCommands.polygon.getDefaultInstance() : crossBar_;
    }
    /**
     * <pre>
     * a line object as well, once ball pass this bar, u score, yikes!
     * </pre>
     *
     * <code>.polygon cross_bar = 5;</code>
     */
    public RemoteCommands.polygonOrBuilder getCrossBarOrBuilder() {
      return getCrossBar();
    }

    public static final int NUM_ROBOTS_FIELD_NUMBER = 6;
    private int numRobots_;
    /**
     * <code>int32 num_robots = 6;</code>
     * @return The numRobots.
     */
    public int getNumRobots() {
      return numRobots_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (playArea_ != null) {
        output.writeMessage(1, getPlayArea());
      }
      if (penaltyArea_ != null) {
        output.writeMessage(2, getPenaltyArea());
      }
      if (centerCircle_ != null) {
        output.writeMessage(3, getCenterCircle());
      }
      if (centerLine_ != null) {
        output.writeMessage(4, getCenterLine());
      }
      if (crossBar_ != null) {
        output.writeMessage(5, getCrossBar());
      }
      if (numRobots_ != 0) {
        output.writeInt32(6, numRobots_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (playArea_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlayArea());
      }
      if (penaltyArea_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPenaltyArea());
      }
      if (centerCircle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCenterCircle());
      }
      if (centerLine_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCenterLine());
      }
      if (crossBar_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getCrossBar());
      }
      if (numRobots_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, numRobots_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.static_data)) {
        return super.equals(obj);
      }
      RemoteCommands.static_data other = (RemoteCommands.static_data) obj;

      if (hasPlayArea() != other.hasPlayArea()) return false;
      if (hasPlayArea()) {
        if (!getPlayArea()
            .equals(other.getPlayArea())) return false;
      }
      if (hasPenaltyArea() != other.hasPenaltyArea()) return false;
      if (hasPenaltyArea()) {
        if (!getPenaltyArea()
            .equals(other.getPenaltyArea())) return false;
      }
      if (hasCenterCircle() != other.hasCenterCircle()) return false;
      if (hasCenterCircle()) {
        if (!getCenterCircle()
            .equals(other.getCenterCircle())) return false;
      }
      if (hasCenterLine() != other.hasCenterLine()) return false;
      if (hasCenterLine()) {
        if (!getCenterLine()
            .equals(other.getCenterLine())) return false;
      }
      if (hasCrossBar() != other.hasCrossBar()) return false;
      if (hasCrossBar()) {
        if (!getCrossBar()
            .equals(other.getCrossBar())) return false;
      }
      if (getNumRobots()
          != other.getNumRobots()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayArea()) {
        hash = (37 * hash) + PLAY_AREA_FIELD_NUMBER;
        hash = (53 * hash) + getPlayArea().hashCode();
      }
      if (hasPenaltyArea()) {
        hash = (37 * hash) + PENALTY_AREA_FIELD_NUMBER;
        hash = (53 * hash) + getPenaltyArea().hashCode();
      }
      if (hasCenterCircle()) {
        hash = (37 * hash) + CENTER_CIRCLE_FIELD_NUMBER;
        hash = (53 * hash) + getCenterCircle().hashCode();
      }
      if (hasCenterLine()) {
        hash = (37 * hash) + CENTER_LINE_FIELD_NUMBER;
        hash = (53 * hash) + getCenterLine().hashCode();
      }
      if (hasCrossBar()) {
        hash = (37 * hash) + CROSS_BAR_FIELD_NUMBER;
        hash = (53 * hash) + getCrossBar().hashCode();
      }
      hash = (37 * hash) + NUM_ROBOTS_FIELD_NUMBER;
      hash = (53 * hash) + getNumRobots();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.static_data parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.static_data parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.static_data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.static_data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.static_data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.static_data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.static_data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.static_data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.static_data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.static_data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.static_data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.static_data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.static_data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code static_data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:static_data)
        RemoteCommands.static_dataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_static_data_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_static_data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.static_data.class, RemoteCommands.static_data.Builder.class);
      }

      // Construct using RemoteCommands.static_data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (playAreaBuilder_ == null) {
          playArea_ = null;
        } else {
          playArea_ = null;
          playAreaBuilder_ = null;
        }
        if (penaltyAreaBuilder_ == null) {
          penaltyArea_ = null;
        } else {
          penaltyArea_ = null;
          penaltyAreaBuilder_ = null;
        }
        if (centerCircleBuilder_ == null) {
          centerCircle_ = null;
        } else {
          centerCircle_ = null;
          centerCircleBuilder_ = null;
        }
        if (centerLineBuilder_ == null) {
          centerLine_ = null;
        } else {
          centerLine_ = null;
          centerLineBuilder_ = null;
        }
        if (crossBarBuilder_ == null) {
          crossBar_ = null;
        } else {
          crossBar_ = null;
          crossBarBuilder_ = null;
        }
        numRobots_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_static_data_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.static_data getDefaultInstanceForType() {
        return RemoteCommands.static_data.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.static_data build() {
        RemoteCommands.static_data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.static_data buildPartial() {
        RemoteCommands.static_data result = new RemoteCommands.static_data(this);
        if (playAreaBuilder_ == null) {
          result.playArea_ = playArea_;
        } else {
          result.playArea_ = playAreaBuilder_.build();
        }
        if (penaltyAreaBuilder_ == null) {
          result.penaltyArea_ = penaltyArea_;
        } else {
          result.penaltyArea_ = penaltyAreaBuilder_.build();
        }
        if (centerCircleBuilder_ == null) {
          result.centerCircle_ = centerCircle_;
        } else {
          result.centerCircle_ = centerCircleBuilder_.build();
        }
        if (centerLineBuilder_ == null) {
          result.centerLine_ = centerLine_;
        } else {
          result.centerLine_ = centerLineBuilder_.build();
        }
        if (crossBarBuilder_ == null) {
          result.crossBar_ = crossBar_;
        } else {
          result.crossBar_ = crossBarBuilder_.build();
        }
        result.numRobots_ = numRobots_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.static_data) {
          return mergeFrom((RemoteCommands.static_data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.static_data other) {
        if (other == RemoteCommands.static_data.getDefaultInstance()) return this;
        if (other.hasPlayArea()) {
          mergePlayArea(other.getPlayArea());
        }
        if (other.hasPenaltyArea()) {
          mergePenaltyArea(other.getPenaltyArea());
        }
        if (other.hasCenterCircle()) {
          mergeCenterCircle(other.getCenterCircle());
        }
        if (other.hasCenterLine()) {
          mergeCenterLine(other.getCenterLine());
        }
        if (other.hasCrossBar()) {
          mergeCrossBar(other.getCrossBar());
        }
        if (other.getNumRobots() != 0) {
          setNumRobots(other.getNumRobots());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.static_data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.static_data) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private RemoteCommands.polygon playArea_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> playAreaBuilder_;
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       * @return Whether the playArea field is set.
       */
      public boolean hasPlayArea() {
        return playAreaBuilder_ != null || playArea_ != null;
      }
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       * @return The playArea.
       */
      public RemoteCommands.polygon getPlayArea() {
        if (playAreaBuilder_ == null) {
          return playArea_ == null ? RemoteCommands.polygon.getDefaultInstance() : playArea_;
        } else {
          return playAreaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       */
      public Builder setPlayArea(RemoteCommands.polygon value) {
        if (playAreaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playArea_ = value;
          onChanged();
        } else {
          playAreaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       */
      public Builder setPlayArea(
          RemoteCommands.polygon.Builder builderForValue) {
        if (playAreaBuilder_ == null) {
          playArea_ = builderForValue.build();
          onChanged();
        } else {
          playAreaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       */
      public Builder mergePlayArea(RemoteCommands.polygon value) {
        if (playAreaBuilder_ == null) {
          if (playArea_ != null) {
            playArea_ =
              RemoteCommands.polygon.newBuilder(playArea_).mergeFrom(value).buildPartial();
          } else {
            playArea_ = value;
          }
          onChanged();
        } else {
          playAreaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       */
      public Builder clearPlayArea() {
        if (playAreaBuilder_ == null) {
          playArea_ = null;
          onChanged();
        } else {
          playArea_ = null;
          playAreaBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       */
      public RemoteCommands.polygon.Builder getPlayAreaBuilder() {
        
        onChanged();
        return getPlayAreaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       */
      public RemoteCommands.polygonOrBuilder getPlayAreaOrBuilder() {
        if (playAreaBuilder_ != null) {
          return playAreaBuilder_.getMessageOrBuilder();
        } else {
          return playArea_ == null ?
              RemoteCommands.polygon.getDefaultInstance() : playArea_;
        }
      }
      /**
       * <pre>
       * play ground formed by Top/bottom touch lines + left/right goal lines
       * </pre>
       *
       * <code>.polygon play_area = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> 
          getPlayAreaFieldBuilder() {
        if (playAreaBuilder_ == null) {
          playAreaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder>(
                  getPlayArea(),
                  getParentForChildren(),
                  isClean());
          playArea_ = null;
        }
        return playAreaBuilder_;
      }

      private RemoteCommands.polygon penaltyArea_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> penaltyAreaBuilder_;
      /**
       * <code>.polygon penalty_area = 2;</code>
       * @return Whether the penaltyArea field is set.
       */
      public boolean hasPenaltyArea() {
        return penaltyAreaBuilder_ != null || penaltyArea_ != null;
      }
      /**
       * <code>.polygon penalty_area = 2;</code>
       * @return The penaltyArea.
       */
      public RemoteCommands.polygon getPenaltyArea() {
        if (penaltyAreaBuilder_ == null) {
          return penaltyArea_ == null ? RemoteCommands.polygon.getDefaultInstance() : penaltyArea_;
        } else {
          return penaltyAreaBuilder_.getMessage();
        }
      }
      /**
       * <code>.polygon penalty_area = 2;</code>
       */
      public Builder setPenaltyArea(RemoteCommands.polygon value) {
        if (penaltyAreaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          penaltyArea_ = value;
          onChanged();
        } else {
          penaltyAreaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.polygon penalty_area = 2;</code>
       */
      public Builder setPenaltyArea(
          RemoteCommands.polygon.Builder builderForValue) {
        if (penaltyAreaBuilder_ == null) {
          penaltyArea_ = builderForValue.build();
          onChanged();
        } else {
          penaltyAreaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.polygon penalty_area = 2;</code>
       */
      public Builder mergePenaltyArea(RemoteCommands.polygon value) {
        if (penaltyAreaBuilder_ == null) {
          if (penaltyArea_ != null) {
            penaltyArea_ =
              RemoteCommands.polygon.newBuilder(penaltyArea_).mergeFrom(value).buildPartial();
          } else {
            penaltyArea_ = value;
          }
          onChanged();
        } else {
          penaltyAreaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.polygon penalty_area = 2;</code>
       */
      public Builder clearPenaltyArea() {
        if (penaltyAreaBuilder_ == null) {
          penaltyArea_ = null;
          onChanged();
        } else {
          penaltyArea_ = null;
          penaltyAreaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.polygon penalty_area = 2;</code>
       */
      public RemoteCommands.polygon.Builder getPenaltyAreaBuilder() {
        
        onChanged();
        return getPenaltyAreaFieldBuilder().getBuilder();
      }
      /**
       * <code>.polygon penalty_area = 2;</code>
       */
      public RemoteCommands.polygonOrBuilder getPenaltyAreaOrBuilder() {
        if (penaltyAreaBuilder_ != null) {
          return penaltyAreaBuilder_.getMessageOrBuilder();
        } else {
          return penaltyArea_ == null ?
              RemoteCommands.polygon.getDefaultInstance() : penaltyArea_;
        }
      }
      /**
       * <code>.polygon penalty_area = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> 
          getPenaltyAreaFieldBuilder() {
        if (penaltyAreaBuilder_ == null) {
          penaltyAreaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder>(
                  getPenaltyArea(),
                  getParentForChildren(),
                  isClean());
          penaltyArea_ = null;
        }
        return penaltyAreaBuilder_;
      }

      private RemoteCommands.polygon centerCircle_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> centerCircleBuilder_;
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       * @return Whether the centerCircle field is set.
       */
      public boolean hasCenterCircle() {
        return centerCircleBuilder_ != null || centerCircle_ != null;
      }
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       * @return The centerCircle.
       */
      public RemoteCommands.polygon getCenterCircle() {
        if (centerCircleBuilder_ == null) {
          return centerCircle_ == null ? RemoteCommands.polygon.getDefaultInstance() : centerCircle_;
        } else {
          return centerCircleBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       */
      public Builder setCenterCircle(RemoteCommands.polygon value) {
        if (centerCircleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          centerCircle_ = value;
          onChanged();
        } else {
          centerCircleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       */
      public Builder setCenterCircle(
          RemoteCommands.polygon.Builder builderForValue) {
        if (centerCircleBuilder_ == null) {
          centerCircle_ = builderForValue.build();
          onChanged();
        } else {
          centerCircleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       */
      public Builder mergeCenterCircle(RemoteCommands.polygon value) {
        if (centerCircleBuilder_ == null) {
          if (centerCircle_ != null) {
            centerCircle_ =
              RemoteCommands.polygon.newBuilder(centerCircle_).mergeFrom(value).buildPartial();
          } else {
            centerCircle_ = value;
          }
          onChanged();
        } else {
          centerCircleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       */
      public Builder clearCenterCircle() {
        if (centerCircleBuilder_ == null) {
          centerCircle_ = null;
          onChanged();
        } else {
          centerCircle_ = null;
          centerCircleBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       */
      public RemoteCommands.polygon.Builder getCenterCircleBuilder() {
        
        onChanged();
        return getCenterCircleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       */
      public RemoteCommands.polygonOrBuilder getCenterCircleOrBuilder() {
        if (centerCircleBuilder_ != null) {
          return centerCircleBuilder_.getMessageOrBuilder();
        } else {
          return centerCircle_ == null ?
              RemoteCommands.polygon.getDefaultInstance() : centerCircle_;
        }
      }
      /**
       * <pre>
       * use a polygon to represent circle
       * </pre>
       *
       * <code>.polygon center_circle = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> 
          getCenterCircleFieldBuilder() {
        if (centerCircleBuilder_ == null) {
          centerCircleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder>(
                  getCenterCircle(),
                  getParentForChildren(),
                  isClean());
          centerCircle_ = null;
        }
        return centerCircleBuilder_;
      }

      private RemoteCommands.polygon centerLine_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> centerLineBuilder_;
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       * @return Whether the centerLine field is set.
       */
      public boolean hasCenterLine() {
        return centerLineBuilder_ != null || centerLine_ != null;
      }
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       * @return The centerLine.
       */
      public RemoteCommands.polygon getCenterLine() {
        if (centerLineBuilder_ == null) {
          return centerLine_ == null ? RemoteCommands.polygon.getDefaultInstance() : centerLine_;
        } else {
          return centerLineBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       */
      public Builder setCenterLine(RemoteCommands.polygon value) {
        if (centerLineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          centerLine_ = value;
          onChanged();
        } else {
          centerLineBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       */
      public Builder setCenterLine(
          RemoteCommands.polygon.Builder builderForValue) {
        if (centerLineBuilder_ == null) {
          centerLine_ = builderForValue.build();
          onChanged();
        } else {
          centerLineBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       */
      public Builder mergeCenterLine(RemoteCommands.polygon value) {
        if (centerLineBuilder_ == null) {
          if (centerLine_ != null) {
            centerLine_ =
              RemoteCommands.polygon.newBuilder(centerLine_).mergeFrom(value).buildPartial();
          } else {
            centerLine_ = value;
          }
          onChanged();
        } else {
          centerLineBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       */
      public Builder clearCenterLine() {
        if (centerLineBuilder_ == null) {
          centerLine_ = null;
          onChanged();
        } else {
          centerLine_ = null;
          centerLineBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       */
      public RemoteCommands.polygon.Builder getCenterLineBuilder() {
        
        onChanged();
        return getCenterLineFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       */
      public RemoteCommands.polygonOrBuilder getCenterLineOrBuilder() {
        if (centerLineBuilder_ != null) {
          return centerLineBuilder_.getMessageOrBuilder();
        } else {
          return centerLine_ == null ?
              RemoteCommands.polygon.getDefaultInstance() : centerLine_;
        }
      }
      /**
       * <pre>
       * consider a line as a polygon (length 2 point_array) as well
       * </pre>
       *
       * <code>.polygon center_line = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> 
          getCenterLineFieldBuilder() {
        if (centerLineBuilder_ == null) {
          centerLineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder>(
                  getCenterLine(),
                  getParentForChildren(),
                  isClean());
          centerLine_ = null;
        }
        return centerLineBuilder_;
      }

      private RemoteCommands.polygon crossBar_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> crossBarBuilder_;
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       * @return Whether the crossBar field is set.
       */
      public boolean hasCrossBar() {
        return crossBarBuilder_ != null || crossBar_ != null;
      }
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       * @return The crossBar.
       */
      public RemoteCommands.polygon getCrossBar() {
        if (crossBarBuilder_ == null) {
          return crossBar_ == null ? RemoteCommands.polygon.getDefaultInstance() : crossBar_;
        } else {
          return crossBarBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       */
      public Builder setCrossBar(RemoteCommands.polygon value) {
        if (crossBarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          crossBar_ = value;
          onChanged();
        } else {
          crossBarBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       */
      public Builder setCrossBar(
          RemoteCommands.polygon.Builder builderForValue) {
        if (crossBarBuilder_ == null) {
          crossBar_ = builderForValue.build();
          onChanged();
        } else {
          crossBarBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       */
      public Builder mergeCrossBar(RemoteCommands.polygon value) {
        if (crossBarBuilder_ == null) {
          if (crossBar_ != null) {
            crossBar_ =
              RemoteCommands.polygon.newBuilder(crossBar_).mergeFrom(value).buildPartial();
          } else {
            crossBar_ = value;
          }
          onChanged();
        } else {
          crossBarBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       */
      public Builder clearCrossBar() {
        if (crossBarBuilder_ == null) {
          crossBar_ = null;
          onChanged();
        } else {
          crossBar_ = null;
          crossBarBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       */
      public RemoteCommands.polygon.Builder getCrossBarBuilder() {
        
        onChanged();
        return getCrossBarFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       */
      public RemoteCommands.polygonOrBuilder getCrossBarOrBuilder() {
        if (crossBarBuilder_ != null) {
          return crossBarBuilder_.getMessageOrBuilder();
        } else {
          return crossBar_ == null ?
              RemoteCommands.polygon.getDefaultInstance() : crossBar_;
        }
      }
      /**
       * <pre>
       * a line object as well, once ball pass this bar, u score, yikes!
       * </pre>
       *
       * <code>.polygon cross_bar = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder> 
          getCrossBarFieldBuilder() {
        if (crossBarBuilder_ == null) {
          crossBarBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.polygon, RemoteCommands.polygon.Builder, RemoteCommands.polygonOrBuilder>(
                  getCrossBar(),
                  getParentForChildren(),
                  isClean());
          crossBar_ = null;
        }
        return crossBarBuilder_;
      }

      private int numRobots_ ;
      /**
       * <code>int32 num_robots = 6;</code>
       * @return The numRobots.
       */
      public int getNumRobots() {
        return numRobots_;
      }
      /**
       * <code>int32 num_robots = 6;</code>
       * @param value The numRobots to set.
       * @return This builder for chaining.
       */
      public Builder setNumRobots(int value) {
        
        numRobots_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_robots = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumRobots() {
        
        numRobots_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:static_data)
    }

    // @@protoc_insertion_point(class_scope:static_data)
    private static final RemoteCommands.static_data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.static_data();
    }

    public static RemoteCommands.static_data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<static_data>
        PARSER = new com.google.protobuf.AbstractParser<static_data>() {
      @java.lang.Override
      public static_data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new static_data(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<static_data> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<static_data> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.static_data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface controlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:control)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.vec2d velocity = 1;</code>
     * @return Whether the velocity field is set.
     */
    boolean hasVelocity();
    /**
     * <code>.vec2d velocity = 1;</code>
     * @return The velocity.
     */
    RemoteCommands.vec2d getVelocity();
    /**
     * <code>.vec2d velocity = 1;</code>
     */
    RemoteCommands.vec2dOrBuilder getVelocityOrBuilder();

    /**
     * <code>float angular_velocity = 2;</code>
     * @return The angularVelocity.
     */
    float getAngularVelocity();

    /**
     * <code>float dribbler_pwr = 3;</code>
     * @return The dribblerPwr.
     */
    float getDribblerPwr();

    /**
     * <code>float kicker_pwr = 4;</code>
     * @return The kickerPwr.
     */
    float getKickerPwr();

    /**
     * <code>float chippping_pwr = 5;</code>
     * @return The chipppingPwr.
     */
    float getChipppingPwr();
  }
  /**
   * <pre>
   * basic control packet
   * </pre>
   *
   * Protobuf type {@code control}
   */
  public  static final class control extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:control)
      controlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use control.newBuilder() to construct.
    private control(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private control() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new control();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private control(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              RemoteCommands.vec2d.Builder subBuilder = null;
              if (velocity_ != null) {
                subBuilder = velocity_.toBuilder();
              }
              velocity_ = input.readMessage(RemoteCommands.vec2d.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(velocity_);
                velocity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 21: {

              angularVelocity_ = input.readFloat();
              break;
            }
            case 29: {

              dribblerPwr_ = input.readFloat();
              break;
            }
            case 37: {

              kickerPwr_ = input.readFloat();
              break;
            }
            case 45: {

              chipppingPwr_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_control_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_control_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.control.class, RemoteCommands.control.Builder.class);
    }

    public static final int VELOCITY_FIELD_NUMBER = 1;
    private RemoteCommands.vec2d velocity_;
    /**
     * <code>.vec2d velocity = 1;</code>
     * @return Whether the velocity field is set.
     */
    public boolean hasVelocity() {
      return velocity_ != null;
    }
    /**
     * <code>.vec2d velocity = 1;</code>
     * @return The velocity.
     */
    public RemoteCommands.vec2d getVelocity() {
      return velocity_ == null ? RemoteCommands.vec2d.getDefaultInstance() : velocity_;
    }
    /**
     * <code>.vec2d velocity = 1;</code>
     */
    public RemoteCommands.vec2dOrBuilder getVelocityOrBuilder() {
      return getVelocity();
    }

    public static final int ANGULAR_VELOCITY_FIELD_NUMBER = 2;
    private float angularVelocity_;
    /**
     * <code>float angular_velocity = 2;</code>
     * @return The angularVelocity.
     */
    public float getAngularVelocity() {
      return angularVelocity_;
    }

    public static final int DRIBBLER_PWR_FIELD_NUMBER = 3;
    private float dribblerPwr_;
    /**
     * <code>float dribbler_pwr = 3;</code>
     * @return The dribblerPwr.
     */
    public float getDribblerPwr() {
      return dribblerPwr_;
    }

    public static final int KICKER_PWR_FIELD_NUMBER = 4;
    private float kickerPwr_;
    /**
     * <code>float kicker_pwr = 4;</code>
     * @return The kickerPwr.
     */
    public float getKickerPwr() {
      return kickerPwr_;
    }

    public static final int CHIPPPING_PWR_FIELD_NUMBER = 5;
    private float chipppingPwr_;
    /**
     * <code>float chippping_pwr = 5;</code>
     * @return The chipppingPwr.
     */
    public float getChipppingPwr() {
      return chipppingPwr_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (velocity_ != null) {
        output.writeMessage(1, getVelocity());
      }
      if (angularVelocity_ != 0F) {
        output.writeFloat(2, angularVelocity_);
      }
      if (dribblerPwr_ != 0F) {
        output.writeFloat(3, dribblerPwr_);
      }
      if (kickerPwr_ != 0F) {
        output.writeFloat(4, kickerPwr_);
      }
      if (chipppingPwr_ != 0F) {
        output.writeFloat(5, chipppingPwr_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (velocity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getVelocity());
      }
      if (angularVelocity_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, angularVelocity_);
      }
      if (dribblerPwr_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, dribblerPwr_);
      }
      if (kickerPwr_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, kickerPwr_);
      }
      if (chipppingPwr_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, chipppingPwr_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.control)) {
        return super.equals(obj);
      }
      RemoteCommands.control other = (RemoteCommands.control) obj;

      if (hasVelocity() != other.hasVelocity()) return false;
      if (hasVelocity()) {
        if (!getVelocity()
            .equals(other.getVelocity())) return false;
      }
      if (java.lang.Float.floatToIntBits(getAngularVelocity())
          != java.lang.Float.floatToIntBits(
              other.getAngularVelocity())) return false;
      if (java.lang.Float.floatToIntBits(getDribblerPwr())
          != java.lang.Float.floatToIntBits(
              other.getDribblerPwr())) return false;
      if (java.lang.Float.floatToIntBits(getKickerPwr())
          != java.lang.Float.floatToIntBits(
              other.getKickerPwr())) return false;
      if (java.lang.Float.floatToIntBits(getChipppingPwr())
          != java.lang.Float.floatToIntBits(
              other.getChipppingPwr())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVelocity()) {
        hash = (37 * hash) + VELOCITY_FIELD_NUMBER;
        hash = (53 * hash) + getVelocity().hashCode();
      }
      hash = (37 * hash) + ANGULAR_VELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAngularVelocity());
      hash = (37 * hash) + DRIBBLER_PWR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDribblerPwr());
      hash = (37 * hash) + KICKER_PWR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getKickerPwr());
      hash = (37 * hash) + CHIPPPING_PWR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getChipppingPwr());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.control parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.control parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.control parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.control parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.control parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.control parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.control parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.control parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.control parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.control parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.control parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.control parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.control prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * basic control packet
     * </pre>
     *
     * Protobuf type {@code control}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:control)
        RemoteCommands.controlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_control_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_control_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.control.class, RemoteCommands.control.Builder.class);
      }

      // Construct using RemoteCommands.control.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (velocityBuilder_ == null) {
          velocity_ = null;
        } else {
          velocity_ = null;
          velocityBuilder_ = null;
        }
        angularVelocity_ = 0F;

        dribblerPwr_ = 0F;

        kickerPwr_ = 0F;

        chipppingPwr_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_control_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.control getDefaultInstanceForType() {
        return RemoteCommands.control.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.control build() {
        RemoteCommands.control result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.control buildPartial() {
        RemoteCommands.control result = new RemoteCommands.control(this);
        if (velocityBuilder_ == null) {
          result.velocity_ = velocity_;
        } else {
          result.velocity_ = velocityBuilder_.build();
        }
        result.angularVelocity_ = angularVelocity_;
        result.dribblerPwr_ = dribblerPwr_;
        result.kickerPwr_ = kickerPwr_;
        result.chipppingPwr_ = chipppingPwr_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.control) {
          return mergeFrom((RemoteCommands.control)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.control other) {
        if (other == RemoteCommands.control.getDefaultInstance()) return this;
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        if (other.getAngularVelocity() != 0F) {
          setAngularVelocity(other.getAngularVelocity());
        }
        if (other.getDribblerPwr() != 0F) {
          setDribblerPwr(other.getDribblerPwr());
        }
        if (other.getKickerPwr() != 0F) {
          setKickerPwr(other.getKickerPwr());
        }
        if (other.getChipppingPwr() != 0F) {
          setChipppingPwr(other.getChipppingPwr());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.control parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.control) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private RemoteCommands.vec2d velocity_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> velocityBuilder_;
      /**
       * <code>.vec2d velocity = 1;</code>
       * @return Whether the velocity field is set.
       */
      public boolean hasVelocity() {
        return velocityBuilder_ != null || velocity_ != null;
      }
      /**
       * <code>.vec2d velocity = 1;</code>
       * @return The velocity.
       */
      public RemoteCommands.vec2d getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_ == null ? RemoteCommands.vec2d.getDefaultInstance() : velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      /**
       * <code>.vec2d velocity = 1;</code>
       */
      public Builder setVelocity(RemoteCommands.vec2d value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
          onChanged();
        } else {
          velocityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.vec2d velocity = 1;</code>
       */
      public Builder setVelocity(
          RemoteCommands.vec2d.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
          onChanged();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.vec2d velocity = 1;</code>
       */
      public Builder mergeVelocity(RemoteCommands.vec2d value) {
        if (velocityBuilder_ == null) {
          if (velocity_ != null) {
            velocity_ =
              RemoteCommands.vec2d.newBuilder(velocity_).mergeFrom(value).buildPartial();
          } else {
            velocity_ = value;
          }
          onChanged();
        } else {
          velocityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.vec2d velocity = 1;</code>
       */
      public Builder clearVelocity() {
        if (velocityBuilder_ == null) {
          velocity_ = null;
          onChanged();
        } else {
          velocity_ = null;
          velocityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.vec2d velocity = 1;</code>
       */
      public RemoteCommands.vec2d.Builder getVelocityBuilder() {
        
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      /**
       * <code>.vec2d velocity = 1;</code>
       */
      public RemoteCommands.vec2dOrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_ == null ?
              RemoteCommands.vec2d.getDefaultInstance() : velocity_;
        }
      }
      /**
       * <code>.vec2d velocity = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> 
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder>(
                  getVelocity(),
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }

      private float angularVelocity_ ;
      /**
       * <code>float angular_velocity = 2;</code>
       * @return The angularVelocity.
       */
      public float getAngularVelocity() {
        return angularVelocity_;
      }
      /**
       * <code>float angular_velocity = 2;</code>
       * @param value The angularVelocity to set.
       * @return This builder for chaining.
       */
      public Builder setAngularVelocity(float value) {
        
        angularVelocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float angular_velocity = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAngularVelocity() {
        
        angularVelocity_ = 0F;
        onChanged();
        return this;
      }

      private float dribblerPwr_ ;
      /**
       * <code>float dribbler_pwr = 3;</code>
       * @return The dribblerPwr.
       */
      public float getDribblerPwr() {
        return dribblerPwr_;
      }
      /**
       * <code>float dribbler_pwr = 3;</code>
       * @param value The dribblerPwr to set.
       * @return This builder for chaining.
       */
      public Builder setDribblerPwr(float value) {
        
        dribblerPwr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float dribbler_pwr = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDribblerPwr() {
        
        dribblerPwr_ = 0F;
        onChanged();
        return this;
      }

      private float kickerPwr_ ;
      /**
       * <code>float kicker_pwr = 4;</code>
       * @return The kickerPwr.
       */
      public float getKickerPwr() {
        return kickerPwr_;
      }
      /**
       * <code>float kicker_pwr = 4;</code>
       * @param value The kickerPwr to set.
       * @return This builder for chaining.
       */
      public Builder setKickerPwr(float value) {
        
        kickerPwr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float kicker_pwr = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearKickerPwr() {
        
        kickerPwr_ = 0F;
        onChanged();
        return this;
      }

      private float chipppingPwr_ ;
      /**
       * <code>float chippping_pwr = 5;</code>
       * @return The chipppingPwr.
       */
      public float getChipppingPwr() {
        return chipppingPwr_;
      }
      /**
       * <code>float chippping_pwr = 5;</code>
       * @param value The chipppingPwr to set.
       * @return This builder for chaining.
       */
      public Builder setChipppingPwr(float value) {
        
        chipppingPwr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float chippping_pwr = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearChipppingPwr() {
        
        chipppingPwr_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:control)
    }

    // @@protoc_insertion_point(class_scope:control)
    private static final RemoteCommands.control DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.control();
    }

    public static RemoteCommands.control getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<control>
        PARSER = new com.google.protobuf.AbstractParser<control>() {
      @java.lang.Override
      public control parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new control(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<control> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<control> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.control getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface data_sendOrBuilder extends
      // @@protoc_insertion_point(interface_extends:data_send)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.vec2d ball_location = 1;</code>
     * @return Whether the ballLocation field is set.
     */
    boolean hasBallLocation();
    /**
     * <code>.vec2d ball_location = 1;</code>
     * @return The ballLocation.
     */
    RemoteCommands.vec2d getBallLocation();
    /**
     * <code>.vec2d ball_location = 1;</code>
     */
    RemoteCommands.vec2dOrBuilder getBallLocationOrBuilder();

    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    java.util.List<RemoteCommands.vec2d> 
        getRobotLocationsList();
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    RemoteCommands.vec2d getRobotLocations(int index);
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    int getRobotLocationsCount();
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
        getRobotLocationsOrBuilderList();
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    RemoteCommands.vec2dOrBuilder getRobotLocationsOrBuilder(
        int index);

    /**
     * <code>repeated float robot_orientations = 3;</code>
     * @return A list containing the robotOrientations.
     */
    java.util.List<java.lang.Float> getRobotOrientationsList();
    /**
     * <code>repeated float robot_orientations = 3;</code>
     * @return The count of robotOrientations.
     */
    int getRobotOrientationsCount();
    /**
     * <code>repeated float robot_orientations = 3;</code>
     * @param index The index of the element to return.
     * @return The robotOrientations at the given index.
     */
    float getRobotOrientations(int index);

    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    java.util.List<RemoteCommands.vec2d> 
        getRobotVelocitiesList();
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    RemoteCommands.vec2d getRobotVelocities(int index);
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    int getRobotVelocitiesCount();
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
        getRobotVelocitiesOrBuilderList();
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    RemoteCommands.vec2dOrBuilder getRobotVelocitiesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * data to be send to share info to each robot for distributed computation
   * </pre>
   *
   * Protobuf type {@code data_send}
   */
  public  static final class data_send extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:data_send)
      data_sendOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use data_send.newBuilder() to construct.
    private data_send(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private data_send() {
      robotLocations_ = java.util.Collections.emptyList();
      robotOrientations_ = emptyFloatList();
      robotVelocities_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new data_send();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private data_send(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              RemoteCommands.vec2d.Builder subBuilder = null;
              if (ballLocation_ != null) {
                subBuilder = ballLocation_.toBuilder();
              }
              ballLocation_ = input.readMessage(RemoteCommands.vec2d.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ballLocation_);
                ballLocation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                robotLocations_ = new java.util.ArrayList<RemoteCommands.vec2d>();
                mutable_bitField0_ |= 0x00000001;
              }
              robotLocations_.add(
                  input.readMessage(RemoteCommands.vec2d.parser(), extensionRegistry));
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                robotOrientations_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              robotOrientations_.addFloat(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                robotOrientations_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                robotOrientations_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                robotVelocities_ = new java.util.ArrayList<RemoteCommands.vec2d>();
                mutable_bitField0_ |= 0x00000004;
              }
              robotVelocities_.add(
                  input.readMessage(RemoteCommands.vec2d.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          robotLocations_ = java.util.Collections.unmodifiableList(robotLocations_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          robotOrientations_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          robotVelocities_ = java.util.Collections.unmodifiableList(robotVelocities_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_data_send_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_data_send_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.data_send.class, RemoteCommands.data_send.Builder.class);
    }

    public static final int BALL_LOCATION_FIELD_NUMBER = 1;
    private RemoteCommands.vec2d ballLocation_;
    /**
     * <code>.vec2d ball_location = 1;</code>
     * @return Whether the ballLocation field is set.
     */
    public boolean hasBallLocation() {
      return ballLocation_ != null;
    }
    /**
     * <code>.vec2d ball_location = 1;</code>
     * @return The ballLocation.
     */
    public RemoteCommands.vec2d getBallLocation() {
      return ballLocation_ == null ? RemoteCommands.vec2d.getDefaultInstance() : ballLocation_;
    }
    /**
     * <code>.vec2d ball_location = 1;</code>
     */
    public RemoteCommands.vec2dOrBuilder getBallLocationOrBuilder() {
      return getBallLocation();
    }

    public static final int ROBOT_LOCATIONS_FIELD_NUMBER = 2;
    private java.util.List<RemoteCommands.vec2d> robotLocations_;
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    public java.util.List<RemoteCommands.vec2d> getRobotLocationsList() {
      return robotLocations_;
    }
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    public java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
        getRobotLocationsOrBuilderList() {
      return robotLocations_;
    }
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    public int getRobotLocationsCount() {
      return robotLocations_.size();
    }
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    public RemoteCommands.vec2d getRobotLocations(int index) {
      return robotLocations_.get(index);
    }
    /**
     * <code>repeated .vec2d robot_locations = 2;</code>
     */
    public RemoteCommands.vec2dOrBuilder getRobotLocationsOrBuilder(
        int index) {
      return robotLocations_.get(index);
    }

    public static final int ROBOT_ORIENTATIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList robotOrientations_;
    /**
     * <code>repeated float robot_orientations = 3;</code>
     * @return A list containing the robotOrientations.
     */
    public java.util.List<java.lang.Float>
        getRobotOrientationsList() {
      return robotOrientations_;
    }
    /**
     * <code>repeated float robot_orientations = 3;</code>
     * @return The count of robotOrientations.
     */
    public int getRobotOrientationsCount() {
      return robotOrientations_.size();
    }
    /**
     * <code>repeated float robot_orientations = 3;</code>
     * @param index The index of the element to return.
     * @return The robotOrientations at the given index.
     */
    public float getRobotOrientations(int index) {
      return robotOrientations_.getFloat(index);
    }
    private int robotOrientationsMemoizedSerializedSize = -1;

    public static final int ROBOT_VELOCITIES_FIELD_NUMBER = 4;
    private java.util.List<RemoteCommands.vec2d> robotVelocities_;
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    public java.util.List<RemoteCommands.vec2d> getRobotVelocitiesList() {
      return robotVelocities_;
    }
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    public java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
        getRobotVelocitiesOrBuilderList() {
      return robotVelocities_;
    }
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    public int getRobotVelocitiesCount() {
      return robotVelocities_.size();
    }
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    public RemoteCommands.vec2d getRobotVelocities(int index) {
      return robotVelocities_.get(index);
    }
    /**
     * <code>repeated .vec2d robot_velocities = 4;</code>
     */
    public RemoteCommands.vec2dOrBuilder getRobotVelocitiesOrBuilder(
        int index) {
      return robotVelocities_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (ballLocation_ != null) {
        output.writeMessage(1, getBallLocation());
      }
      for (int i = 0; i < robotLocations_.size(); i++) {
        output.writeMessage(2, robotLocations_.get(i));
      }
      if (getRobotOrientationsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(robotOrientationsMemoizedSerializedSize);
      }
      for (int i = 0; i < robotOrientations_.size(); i++) {
        output.writeFloatNoTag(robotOrientations_.getFloat(i));
      }
      for (int i = 0; i < robotVelocities_.size(); i++) {
        output.writeMessage(4, robotVelocities_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ballLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBallLocation());
      }
      for (int i = 0; i < robotLocations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, robotLocations_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRobotOrientationsList().size();
        size += dataSize;
        if (!getRobotOrientationsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        robotOrientationsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < robotVelocities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, robotVelocities_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.data_send)) {
        return super.equals(obj);
      }
      RemoteCommands.data_send other = (RemoteCommands.data_send) obj;

      if (hasBallLocation() != other.hasBallLocation()) return false;
      if (hasBallLocation()) {
        if (!getBallLocation()
            .equals(other.getBallLocation())) return false;
      }
      if (!getRobotLocationsList()
          .equals(other.getRobotLocationsList())) return false;
      if (!getRobotOrientationsList()
          .equals(other.getRobotOrientationsList())) return false;
      if (!getRobotVelocitiesList()
          .equals(other.getRobotVelocitiesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBallLocation()) {
        hash = (37 * hash) + BALL_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getBallLocation().hashCode();
      }
      if (getRobotLocationsCount() > 0) {
        hash = (37 * hash) + ROBOT_LOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRobotLocationsList().hashCode();
      }
      if (getRobotOrientationsCount() > 0) {
        hash = (37 * hash) + ROBOT_ORIENTATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRobotOrientationsList().hashCode();
      }
      if (getRobotVelocitiesCount() > 0) {
        hash = (37 * hash) + ROBOT_VELOCITIES_FIELD_NUMBER;
        hash = (53 * hash) + getRobotVelocitiesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.data_send parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.data_send parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.data_send parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.data_send parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.data_send parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.data_send parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.data_send parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.data_send parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.data_send parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.data_send parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.data_send parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.data_send parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.data_send prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * data to be send to share info to each robot for distributed computation
     * </pre>
     *
     * Protobuf type {@code data_send}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:data_send)
        RemoteCommands.data_sendOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_data_send_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_data_send_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.data_send.class, RemoteCommands.data_send.Builder.class);
      }

      // Construct using RemoteCommands.data_send.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRobotLocationsFieldBuilder();
          getRobotVelocitiesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (ballLocationBuilder_ == null) {
          ballLocation_ = null;
        } else {
          ballLocation_ = null;
          ballLocationBuilder_ = null;
        }
        if (robotLocationsBuilder_ == null) {
          robotLocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          robotLocationsBuilder_.clear();
        }
        robotOrientations_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (robotVelocitiesBuilder_ == null) {
          robotVelocities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          robotVelocitiesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_data_send_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.data_send getDefaultInstanceForType() {
        return RemoteCommands.data_send.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.data_send build() {
        RemoteCommands.data_send result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.data_send buildPartial() {
        RemoteCommands.data_send result = new RemoteCommands.data_send(this);
        int from_bitField0_ = bitField0_;
        if (ballLocationBuilder_ == null) {
          result.ballLocation_ = ballLocation_;
        } else {
          result.ballLocation_ = ballLocationBuilder_.build();
        }
        if (robotLocationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            robotLocations_ = java.util.Collections.unmodifiableList(robotLocations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.robotLocations_ = robotLocations_;
        } else {
          result.robotLocations_ = robotLocationsBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          robotOrientations_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.robotOrientations_ = robotOrientations_;
        if (robotVelocitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            robotVelocities_ = java.util.Collections.unmodifiableList(robotVelocities_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.robotVelocities_ = robotVelocities_;
        } else {
          result.robotVelocities_ = robotVelocitiesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.data_send) {
          return mergeFrom((RemoteCommands.data_send)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.data_send other) {
        if (other == RemoteCommands.data_send.getDefaultInstance()) return this;
        if (other.hasBallLocation()) {
          mergeBallLocation(other.getBallLocation());
        }
        if (robotLocationsBuilder_ == null) {
          if (!other.robotLocations_.isEmpty()) {
            if (robotLocations_.isEmpty()) {
              robotLocations_ = other.robotLocations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRobotLocationsIsMutable();
              robotLocations_.addAll(other.robotLocations_);
            }
            onChanged();
          }
        } else {
          if (!other.robotLocations_.isEmpty()) {
            if (robotLocationsBuilder_.isEmpty()) {
              robotLocationsBuilder_.dispose();
              robotLocationsBuilder_ = null;
              robotLocations_ = other.robotLocations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              robotLocationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRobotLocationsFieldBuilder() : null;
            } else {
              robotLocationsBuilder_.addAllMessages(other.robotLocations_);
            }
          }
        }
        if (!other.robotOrientations_.isEmpty()) {
          if (robotOrientations_.isEmpty()) {
            robotOrientations_ = other.robotOrientations_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRobotOrientationsIsMutable();
            robotOrientations_.addAll(other.robotOrientations_);
          }
          onChanged();
        }
        if (robotVelocitiesBuilder_ == null) {
          if (!other.robotVelocities_.isEmpty()) {
            if (robotVelocities_.isEmpty()) {
              robotVelocities_ = other.robotVelocities_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRobotVelocitiesIsMutable();
              robotVelocities_.addAll(other.robotVelocities_);
            }
            onChanged();
          }
        } else {
          if (!other.robotVelocities_.isEmpty()) {
            if (robotVelocitiesBuilder_.isEmpty()) {
              robotVelocitiesBuilder_.dispose();
              robotVelocitiesBuilder_ = null;
              robotVelocities_ = other.robotVelocities_;
              bitField0_ = (bitField0_ & ~0x00000004);
              robotVelocitiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRobotVelocitiesFieldBuilder() : null;
            } else {
              robotVelocitiesBuilder_.addAllMessages(other.robotVelocities_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.data_send parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.data_send) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private RemoteCommands.vec2d ballLocation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> ballLocationBuilder_;
      /**
       * <code>.vec2d ball_location = 1;</code>
       * @return Whether the ballLocation field is set.
       */
      public boolean hasBallLocation() {
        return ballLocationBuilder_ != null || ballLocation_ != null;
      }
      /**
       * <code>.vec2d ball_location = 1;</code>
       * @return The ballLocation.
       */
      public RemoteCommands.vec2d getBallLocation() {
        if (ballLocationBuilder_ == null) {
          return ballLocation_ == null ? RemoteCommands.vec2d.getDefaultInstance() : ballLocation_;
        } else {
          return ballLocationBuilder_.getMessage();
        }
      }
      /**
       * <code>.vec2d ball_location = 1;</code>
       */
      public Builder setBallLocation(RemoteCommands.vec2d value) {
        if (ballLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ballLocation_ = value;
          onChanged();
        } else {
          ballLocationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.vec2d ball_location = 1;</code>
       */
      public Builder setBallLocation(
          RemoteCommands.vec2d.Builder builderForValue) {
        if (ballLocationBuilder_ == null) {
          ballLocation_ = builderForValue.build();
          onChanged();
        } else {
          ballLocationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.vec2d ball_location = 1;</code>
       */
      public Builder mergeBallLocation(RemoteCommands.vec2d value) {
        if (ballLocationBuilder_ == null) {
          if (ballLocation_ != null) {
            ballLocation_ =
              RemoteCommands.vec2d.newBuilder(ballLocation_).mergeFrom(value).buildPartial();
          } else {
            ballLocation_ = value;
          }
          onChanged();
        } else {
          ballLocationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.vec2d ball_location = 1;</code>
       */
      public Builder clearBallLocation() {
        if (ballLocationBuilder_ == null) {
          ballLocation_ = null;
          onChanged();
        } else {
          ballLocation_ = null;
          ballLocationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.vec2d ball_location = 1;</code>
       */
      public RemoteCommands.vec2d.Builder getBallLocationBuilder() {
        
        onChanged();
        return getBallLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>.vec2d ball_location = 1;</code>
       */
      public RemoteCommands.vec2dOrBuilder getBallLocationOrBuilder() {
        if (ballLocationBuilder_ != null) {
          return ballLocationBuilder_.getMessageOrBuilder();
        } else {
          return ballLocation_ == null ?
              RemoteCommands.vec2d.getDefaultInstance() : ballLocation_;
        }
      }
      /**
       * <code>.vec2d ball_location = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> 
          getBallLocationFieldBuilder() {
        if (ballLocationBuilder_ == null) {
          ballLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder>(
                  getBallLocation(),
                  getParentForChildren(),
                  isClean());
          ballLocation_ = null;
        }
        return ballLocationBuilder_;
      }

      private java.util.List<RemoteCommands.vec2d> robotLocations_ =
        java.util.Collections.emptyList();
      private void ensureRobotLocationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          robotLocations_ = new java.util.ArrayList<RemoteCommands.vec2d>(robotLocations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> robotLocationsBuilder_;

      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public java.util.List<RemoteCommands.vec2d> getRobotLocationsList() {
        if (robotLocationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(robotLocations_);
        } else {
          return robotLocationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public int getRobotLocationsCount() {
        if (robotLocationsBuilder_ == null) {
          return robotLocations_.size();
        } else {
          return robotLocationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public RemoteCommands.vec2d getRobotLocations(int index) {
        if (robotLocationsBuilder_ == null) {
          return robotLocations_.get(index);
        } else {
          return robotLocationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder setRobotLocations(
          int index, RemoteCommands.vec2d value) {
        if (robotLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotLocationsIsMutable();
          robotLocations_.set(index, value);
          onChanged();
        } else {
          robotLocationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder setRobotLocations(
          int index, RemoteCommands.vec2d.Builder builderForValue) {
        if (robotLocationsBuilder_ == null) {
          ensureRobotLocationsIsMutable();
          robotLocations_.set(index, builderForValue.build());
          onChanged();
        } else {
          robotLocationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder addRobotLocations(RemoteCommands.vec2d value) {
        if (robotLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotLocationsIsMutable();
          robotLocations_.add(value);
          onChanged();
        } else {
          robotLocationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder addRobotLocations(
          int index, RemoteCommands.vec2d value) {
        if (robotLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotLocationsIsMutable();
          robotLocations_.add(index, value);
          onChanged();
        } else {
          robotLocationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder addRobotLocations(
          RemoteCommands.vec2d.Builder builderForValue) {
        if (robotLocationsBuilder_ == null) {
          ensureRobotLocationsIsMutable();
          robotLocations_.add(builderForValue.build());
          onChanged();
        } else {
          robotLocationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder addRobotLocations(
          int index, RemoteCommands.vec2d.Builder builderForValue) {
        if (robotLocationsBuilder_ == null) {
          ensureRobotLocationsIsMutable();
          robotLocations_.add(index, builderForValue.build());
          onChanged();
        } else {
          robotLocationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder addAllRobotLocations(
          java.lang.Iterable<? extends RemoteCommands.vec2d> values) {
        if (robotLocationsBuilder_ == null) {
          ensureRobotLocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, robotLocations_);
          onChanged();
        } else {
          robotLocationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder clearRobotLocations() {
        if (robotLocationsBuilder_ == null) {
          robotLocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          robotLocationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public Builder removeRobotLocations(int index) {
        if (robotLocationsBuilder_ == null) {
          ensureRobotLocationsIsMutable();
          robotLocations_.remove(index);
          onChanged();
        } else {
          robotLocationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public RemoteCommands.vec2d.Builder getRobotLocationsBuilder(
          int index) {
        return getRobotLocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public RemoteCommands.vec2dOrBuilder getRobotLocationsOrBuilder(
          int index) {
        if (robotLocationsBuilder_ == null) {
          return robotLocations_.get(index);  } else {
          return robotLocationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
           getRobotLocationsOrBuilderList() {
        if (robotLocationsBuilder_ != null) {
          return robotLocationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(robotLocations_);
        }
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public RemoteCommands.vec2d.Builder addRobotLocationsBuilder() {
        return getRobotLocationsFieldBuilder().addBuilder(
            RemoteCommands.vec2d.getDefaultInstance());
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public RemoteCommands.vec2d.Builder addRobotLocationsBuilder(
          int index) {
        return getRobotLocationsFieldBuilder().addBuilder(
            index, RemoteCommands.vec2d.getDefaultInstance());
      }
      /**
       * <code>repeated .vec2d robot_locations = 2;</code>
       */
      public java.util.List<RemoteCommands.vec2d.Builder> 
           getRobotLocationsBuilderList() {
        return getRobotLocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> 
          getRobotLocationsFieldBuilder() {
        if (robotLocationsBuilder_ == null) {
          robotLocationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder>(
                  robotLocations_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          robotLocations_ = null;
        }
        return robotLocationsBuilder_;
      }

      private com.google.protobuf.Internal.FloatList robotOrientations_ = emptyFloatList();
      private void ensureRobotOrientationsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          robotOrientations_ = mutableCopy(robotOrientations_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float robot_orientations = 3;</code>
       * @return A list containing the robotOrientations.
       */
      public java.util.List<java.lang.Float>
          getRobotOrientationsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(robotOrientations_) : robotOrientations_;
      }
      /**
       * <code>repeated float robot_orientations = 3;</code>
       * @return The count of robotOrientations.
       */
      public int getRobotOrientationsCount() {
        return robotOrientations_.size();
      }
      /**
       * <code>repeated float robot_orientations = 3;</code>
       * @param index The index of the element to return.
       * @return The robotOrientations at the given index.
       */
      public float getRobotOrientations(int index) {
        return robotOrientations_.getFloat(index);
      }
      /**
       * <code>repeated float robot_orientations = 3;</code>
       * @param index The index to set the value at.
       * @param value The robotOrientations to set.
       * @return This builder for chaining.
       */
      public Builder setRobotOrientations(
          int index, float value) {
        ensureRobotOrientationsIsMutable();
        robotOrientations_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float robot_orientations = 3;</code>
       * @param value The robotOrientations to add.
       * @return This builder for chaining.
       */
      public Builder addRobotOrientations(float value) {
        ensureRobotOrientationsIsMutable();
        robotOrientations_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float robot_orientations = 3;</code>
       * @param values The robotOrientations to add.
       * @return This builder for chaining.
       */
      public Builder addAllRobotOrientations(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureRobotOrientationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, robotOrientations_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float robot_orientations = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRobotOrientations() {
        robotOrientations_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<RemoteCommands.vec2d> robotVelocities_ =
        java.util.Collections.emptyList();
      private void ensureRobotVelocitiesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          robotVelocities_ = new java.util.ArrayList<RemoteCommands.vec2d>(robotVelocities_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> robotVelocitiesBuilder_;

      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public java.util.List<RemoteCommands.vec2d> getRobotVelocitiesList() {
        if (robotVelocitiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(robotVelocities_);
        } else {
          return robotVelocitiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public int getRobotVelocitiesCount() {
        if (robotVelocitiesBuilder_ == null) {
          return robotVelocities_.size();
        } else {
          return robotVelocitiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public RemoteCommands.vec2d getRobotVelocities(int index) {
        if (robotVelocitiesBuilder_ == null) {
          return robotVelocities_.get(index);
        } else {
          return robotVelocitiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder setRobotVelocities(
          int index, RemoteCommands.vec2d value) {
        if (robotVelocitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotVelocitiesIsMutable();
          robotVelocities_.set(index, value);
          onChanged();
        } else {
          robotVelocitiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder setRobotVelocities(
          int index, RemoteCommands.vec2d.Builder builderForValue) {
        if (robotVelocitiesBuilder_ == null) {
          ensureRobotVelocitiesIsMutable();
          robotVelocities_.set(index, builderForValue.build());
          onChanged();
        } else {
          robotVelocitiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder addRobotVelocities(RemoteCommands.vec2d value) {
        if (robotVelocitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotVelocitiesIsMutable();
          robotVelocities_.add(value);
          onChanged();
        } else {
          robotVelocitiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder addRobotVelocities(
          int index, RemoteCommands.vec2d value) {
        if (robotVelocitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotVelocitiesIsMutable();
          robotVelocities_.add(index, value);
          onChanged();
        } else {
          robotVelocitiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder addRobotVelocities(
          RemoteCommands.vec2d.Builder builderForValue) {
        if (robotVelocitiesBuilder_ == null) {
          ensureRobotVelocitiesIsMutable();
          robotVelocities_.add(builderForValue.build());
          onChanged();
        } else {
          robotVelocitiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder addRobotVelocities(
          int index, RemoteCommands.vec2d.Builder builderForValue) {
        if (robotVelocitiesBuilder_ == null) {
          ensureRobotVelocitiesIsMutable();
          robotVelocities_.add(index, builderForValue.build());
          onChanged();
        } else {
          robotVelocitiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder addAllRobotVelocities(
          java.lang.Iterable<? extends RemoteCommands.vec2d> values) {
        if (robotVelocitiesBuilder_ == null) {
          ensureRobotVelocitiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, robotVelocities_);
          onChanged();
        } else {
          robotVelocitiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder clearRobotVelocities() {
        if (robotVelocitiesBuilder_ == null) {
          robotVelocities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          robotVelocitiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public Builder removeRobotVelocities(int index) {
        if (robotVelocitiesBuilder_ == null) {
          ensureRobotVelocitiesIsMutable();
          robotVelocities_.remove(index);
          onChanged();
        } else {
          robotVelocitiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public RemoteCommands.vec2d.Builder getRobotVelocitiesBuilder(
          int index) {
        return getRobotVelocitiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public RemoteCommands.vec2dOrBuilder getRobotVelocitiesOrBuilder(
          int index) {
        if (robotVelocitiesBuilder_ == null) {
          return robotVelocities_.get(index);  } else {
          return robotVelocitiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public java.util.List<? extends RemoteCommands.vec2dOrBuilder> 
           getRobotVelocitiesOrBuilderList() {
        if (robotVelocitiesBuilder_ != null) {
          return robotVelocitiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(robotVelocities_);
        }
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public RemoteCommands.vec2d.Builder addRobotVelocitiesBuilder() {
        return getRobotVelocitiesFieldBuilder().addBuilder(
            RemoteCommands.vec2d.getDefaultInstance());
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public RemoteCommands.vec2d.Builder addRobotVelocitiesBuilder(
          int index) {
        return getRobotVelocitiesFieldBuilder().addBuilder(
            index, RemoteCommands.vec2d.getDefaultInstance());
      }
      /**
       * <code>repeated .vec2d robot_velocities = 4;</code>
       */
      public java.util.List<RemoteCommands.vec2d.Builder> 
           getRobotVelocitiesBuilderList() {
        return getRobotVelocitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder> 
          getRobotVelocitiesFieldBuilder() {
        if (robotVelocitiesBuilder_ == null) {
          robotVelocitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RemoteCommands.vec2d, RemoteCommands.vec2d.Builder, RemoteCommands.vec2dOrBuilder>(
                  robotVelocities_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          robotVelocities_ = null;
        }
        return robotVelocitiesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:data_send)
    }

    // @@protoc_insertion_point(class_scope:data_send)
    private static final RemoteCommands.data_send DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.data_send();
    }

    public static RemoteCommands.data_send getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<data_send>
        PARSER = new com.google.protobuf.AbstractParser<data_send>() {
      @java.lang.Override
      public data_send parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new data_send(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<data_send> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<data_send> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.data_send getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface custom_controlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:custom_control)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated float numerical_params = 2;</code>
     * @return A list containing the numericalParams.
     */
    java.util.List<java.lang.Float> getNumericalParamsList();
    /**
     * <code>repeated float numerical_params = 2;</code>
     * @return The count of numericalParams.
     */
    int getNumericalParamsCount();
    /**
     * <code>repeated float numerical_params = 2;</code>
     * @param index The index of the element to return.
     * @return The numericalParams at the given index.
     */
    float getNumericalParams(int index);
  }
  /**
   * <pre>
   * user-defined control packet 
   * </pre>
   *
   * Protobuf type {@code custom_control}
   */
  public  static final class custom_control extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:custom_control)
      custom_controlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use custom_control.newBuilder() to construct.
    private custom_control(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private custom_control() {
      name_ = "";
      numericalParams_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new custom_control();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private custom_control(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                numericalParams_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              numericalParams_.addFloat(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                numericalParams_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                numericalParams_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          numericalParams_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_custom_control_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_custom_control_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.custom_control.class, RemoteCommands.custom_control.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUMERICAL_PARAMS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.FloatList numericalParams_;
    /**
     * <code>repeated float numerical_params = 2;</code>
     * @return A list containing the numericalParams.
     */
    public java.util.List<java.lang.Float>
        getNumericalParamsList() {
      return numericalParams_;
    }
    /**
     * <code>repeated float numerical_params = 2;</code>
     * @return The count of numericalParams.
     */
    public int getNumericalParamsCount() {
      return numericalParams_.size();
    }
    /**
     * <code>repeated float numerical_params = 2;</code>
     * @param index The index of the element to return.
     * @return The numericalParams at the given index.
     */
    public float getNumericalParams(int index) {
      return numericalParams_.getFloat(index);
    }
    private int numericalParamsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (getNumericalParamsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(numericalParamsMemoizedSerializedSize);
      }
      for (int i = 0; i < numericalParams_.size(); i++) {
        output.writeFloatNoTag(numericalParams_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getNumericalParamsList().size();
        size += dataSize;
        if (!getNumericalParamsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numericalParamsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.custom_control)) {
        return super.equals(obj);
      }
      RemoteCommands.custom_control other = (RemoteCommands.custom_control) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getNumericalParamsList()
          .equals(other.getNumericalParamsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getNumericalParamsCount() > 0) {
        hash = (37 * hash) + NUMERICAL_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getNumericalParamsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.custom_control parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.custom_control parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.custom_control parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.custom_control parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.custom_control parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.custom_control parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.custom_control parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.custom_control parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.custom_control parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.custom_control parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.custom_control parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.custom_control parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.custom_control prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * user-defined control packet 
     * </pre>
     *
     * Protobuf type {@code custom_control}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:custom_control)
        RemoteCommands.custom_controlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_custom_control_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_custom_control_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.custom_control.class, RemoteCommands.custom_control.Builder.class);
      }

      // Construct using RemoteCommands.custom_control.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        numericalParams_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_custom_control_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.custom_control getDefaultInstanceForType() {
        return RemoteCommands.custom_control.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.custom_control build() {
        RemoteCommands.custom_control result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.custom_control buildPartial() {
        RemoteCommands.custom_control result = new RemoteCommands.custom_control(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        if (((bitField0_ & 0x00000001) != 0)) {
          numericalParams_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.numericalParams_ = numericalParams_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.custom_control) {
          return mergeFrom((RemoteCommands.custom_control)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.custom_control other) {
        if (other == RemoteCommands.custom_control.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.numericalParams_.isEmpty()) {
          if (numericalParams_.isEmpty()) {
            numericalParams_ = other.numericalParams_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNumericalParamsIsMutable();
            numericalParams_.addAll(other.numericalParams_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.custom_control parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.custom_control) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList numericalParams_ = emptyFloatList();
      private void ensureNumericalParamsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          numericalParams_ = mutableCopy(numericalParams_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated float numerical_params = 2;</code>
       * @return A list containing the numericalParams.
       */
      public java.util.List<java.lang.Float>
          getNumericalParamsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(numericalParams_) : numericalParams_;
      }
      /**
       * <code>repeated float numerical_params = 2;</code>
       * @return The count of numericalParams.
       */
      public int getNumericalParamsCount() {
        return numericalParams_.size();
      }
      /**
       * <code>repeated float numerical_params = 2;</code>
       * @param index The index of the element to return.
       * @return The numericalParams at the given index.
       */
      public float getNumericalParams(int index) {
        return numericalParams_.getFloat(index);
      }
      /**
       * <code>repeated float numerical_params = 2;</code>
       * @param index The index to set the value at.
       * @param value The numericalParams to set.
       * @return This builder for chaining.
       */
      public Builder setNumericalParams(
          int index, float value) {
        ensureNumericalParamsIsMutable();
        numericalParams_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_params = 2;</code>
       * @param value The numericalParams to add.
       * @return This builder for chaining.
       */
      public Builder addNumericalParams(float value) {
        ensureNumericalParamsIsMutable();
        numericalParams_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_params = 2;</code>
       * @param values The numericalParams to add.
       * @return This builder for chaining.
       */
      public Builder addAllNumericalParams(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureNumericalParamsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, numericalParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_params = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumericalParams() {
        numericalParams_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:custom_control)
    }

    // @@protoc_insertion_point(class_scope:custom_control)
    private static final RemoteCommands.custom_control DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.custom_control();
    }

    public static RemoteCommands.custom_control getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<custom_control>
        PARSER = new com.google.protobuf.AbstractParser<custom_control>() {
      @java.lang.Override
      public custom_control parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new custom_control(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<custom_control> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<custom_control> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.custom_control getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface custom_taskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:custom_task)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    java.util.List<RemoteCommands.control> 
        getCtrlParamsList();
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    RemoteCommands.control getCtrlParams(int index);
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    int getCtrlParamsCount();
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    java.util.List<? extends RemoteCommands.controlOrBuilder> 
        getCtrlParamsOrBuilderList();
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    RemoteCommands.controlOrBuilder getCtrlParamsOrBuilder(
        int index);

    /**
     * <code>repeated float numerical_params = 3;</code>
     * @return A list containing the numericalParams.
     */
    java.util.List<java.lang.Float> getNumericalParamsList();
    /**
     * <code>repeated float numerical_params = 3;</code>
     * @return The count of numericalParams.
     */
    int getNumericalParamsCount();
    /**
     * <code>repeated float numerical_params = 3;</code>
     * @param index The index of the element to return.
     * @return The numericalParams at the given index.
     */
    float getNumericalParams(int index);

    /**
     * <code>repeated string str_params = 4;</code>
     * @return A list containing the strParams.
     */
    java.util.List<java.lang.String>
        getStrParamsList();
    /**
     * <code>repeated string str_params = 4;</code>
     * @return The count of strParams.
     */
    int getStrParamsCount();
    /**
     * <code>repeated string str_params = 4;</code>
     * @param index The index of the element to return.
     * @return The strParams at the given index.
     */
    java.lang.String getStrParams(int index);
    /**
     * <code>repeated string str_params = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the strParams at the given index.
     */
    com.google.protobuf.ByteString
        getStrParamsBytes(int index);
  }
  /**
   * <pre>
   * user-defined highlevel task to be assigned to a robot
   * </pre>
   *
   * Protobuf type {@code custom_task}
   */
  public  static final class custom_task extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:custom_task)
      custom_taskOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use custom_task.newBuilder() to construct.
    private custom_task(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private custom_task() {
      name_ = "";
      ctrlParams_ = java.util.Collections.emptyList();
      numericalParams_ = emptyFloatList();
      strParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new custom_task();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private custom_task(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                ctrlParams_ = new java.util.ArrayList<RemoteCommands.control>();
                mutable_bitField0_ |= 0x00000001;
              }
              ctrlParams_.add(
                  input.readMessage(RemoteCommands.control.parser(), extensionRegistry));
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                numericalParams_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              numericalParams_.addFloat(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                numericalParams_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                numericalParams_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                strParams_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              strParams_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          ctrlParams_ = java.util.Collections.unmodifiableList(ctrlParams_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          numericalParams_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          strParams_ = strParams_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_custom_task_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_custom_task_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.custom_task.class, RemoteCommands.custom_task.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CTRL_PARAMS_FIELD_NUMBER = 2;
    private java.util.List<RemoteCommands.control> ctrlParams_;
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    public java.util.List<RemoteCommands.control> getCtrlParamsList() {
      return ctrlParams_;
    }
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    public java.util.List<? extends RemoteCommands.controlOrBuilder> 
        getCtrlParamsOrBuilderList() {
      return ctrlParams_;
    }
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    public int getCtrlParamsCount() {
      return ctrlParams_.size();
    }
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    public RemoteCommands.control getCtrlParams(int index) {
      return ctrlParams_.get(index);
    }
    /**
     * <code>repeated .control ctrl_params = 2;</code>
     */
    public RemoteCommands.controlOrBuilder getCtrlParamsOrBuilder(
        int index) {
      return ctrlParams_.get(index);
    }

    public static final int NUMERICAL_PARAMS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList numericalParams_;
    /**
     * <code>repeated float numerical_params = 3;</code>
     * @return A list containing the numericalParams.
     */
    public java.util.List<java.lang.Float>
        getNumericalParamsList() {
      return numericalParams_;
    }
    /**
     * <code>repeated float numerical_params = 3;</code>
     * @return The count of numericalParams.
     */
    public int getNumericalParamsCount() {
      return numericalParams_.size();
    }
    /**
     * <code>repeated float numerical_params = 3;</code>
     * @param index The index of the element to return.
     * @return The numericalParams at the given index.
     */
    public float getNumericalParams(int index) {
      return numericalParams_.getFloat(index);
    }
    private int numericalParamsMemoizedSerializedSize = -1;

    public static final int STR_PARAMS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList strParams_;
    /**
     * <code>repeated string str_params = 4;</code>
     * @return A list containing the strParams.
     */
    public com.google.protobuf.ProtocolStringList
        getStrParamsList() {
      return strParams_;
    }
    /**
     * <code>repeated string str_params = 4;</code>
     * @return The count of strParams.
     */
    public int getStrParamsCount() {
      return strParams_.size();
    }
    /**
     * <code>repeated string str_params = 4;</code>
     * @param index The index of the element to return.
     * @return The strParams at the given index.
     */
    public java.lang.String getStrParams(int index) {
      return strParams_.get(index);
    }
    /**
     * <code>repeated string str_params = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the strParams at the given index.
     */
    public com.google.protobuf.ByteString
        getStrParamsBytes(int index) {
      return strParams_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < ctrlParams_.size(); i++) {
        output.writeMessage(2, ctrlParams_.get(i));
      }
      if (getNumericalParamsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(numericalParamsMemoizedSerializedSize);
      }
      for (int i = 0; i < numericalParams_.size(); i++) {
        output.writeFloatNoTag(numericalParams_.getFloat(i));
      }
      for (int i = 0; i < strParams_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, strParams_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < ctrlParams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ctrlParams_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 4 * getNumericalParamsList().size();
        size += dataSize;
        if (!getNumericalParamsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numericalParamsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strParams_.size(); i++) {
          dataSize += computeStringSizeNoTag(strParams_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStrParamsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.custom_task)) {
        return super.equals(obj);
      }
      RemoteCommands.custom_task other = (RemoteCommands.custom_task) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getCtrlParamsList()
          .equals(other.getCtrlParamsList())) return false;
      if (!getNumericalParamsList()
          .equals(other.getNumericalParamsList())) return false;
      if (!getStrParamsList()
          .equals(other.getStrParamsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getCtrlParamsCount() > 0) {
        hash = (37 * hash) + CTRL_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getCtrlParamsList().hashCode();
      }
      if (getNumericalParamsCount() > 0) {
        hash = (37 * hash) + NUMERICAL_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getNumericalParamsList().hashCode();
      }
      if (getStrParamsCount() > 0) {
        hash = (37 * hash) + STR_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getStrParamsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.custom_task parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.custom_task parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.custom_task parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.custom_task parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.custom_task parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.custom_task parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.custom_task parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.custom_task parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.custom_task parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.custom_task parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.custom_task parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.custom_task parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.custom_task prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * user-defined highlevel task to be assigned to a robot
     * </pre>
     *
     * Protobuf type {@code custom_task}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:custom_task)
        RemoteCommands.custom_taskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_custom_task_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_custom_task_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.custom_task.class, RemoteCommands.custom_task.Builder.class);
      }

      // Construct using RemoteCommands.custom_task.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCtrlParamsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (ctrlParamsBuilder_ == null) {
          ctrlParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ctrlParamsBuilder_.clear();
        }
        numericalParams_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        strParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_custom_task_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.custom_task getDefaultInstanceForType() {
        return RemoteCommands.custom_task.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.custom_task build() {
        RemoteCommands.custom_task result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.custom_task buildPartial() {
        RemoteCommands.custom_task result = new RemoteCommands.custom_task(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        if (ctrlParamsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            ctrlParams_ = java.util.Collections.unmodifiableList(ctrlParams_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ctrlParams_ = ctrlParams_;
        } else {
          result.ctrlParams_ = ctrlParamsBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          numericalParams_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.numericalParams_ = numericalParams_;
        if (((bitField0_ & 0x00000004) != 0)) {
          strParams_ = strParams_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.strParams_ = strParams_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.custom_task) {
          return mergeFrom((RemoteCommands.custom_task)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.custom_task other) {
        if (other == RemoteCommands.custom_task.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (ctrlParamsBuilder_ == null) {
          if (!other.ctrlParams_.isEmpty()) {
            if (ctrlParams_.isEmpty()) {
              ctrlParams_ = other.ctrlParams_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCtrlParamsIsMutable();
              ctrlParams_.addAll(other.ctrlParams_);
            }
            onChanged();
          }
        } else {
          if (!other.ctrlParams_.isEmpty()) {
            if (ctrlParamsBuilder_.isEmpty()) {
              ctrlParamsBuilder_.dispose();
              ctrlParamsBuilder_ = null;
              ctrlParams_ = other.ctrlParams_;
              bitField0_ = (bitField0_ & ~0x00000001);
              ctrlParamsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCtrlParamsFieldBuilder() : null;
            } else {
              ctrlParamsBuilder_.addAllMessages(other.ctrlParams_);
            }
          }
        }
        if (!other.numericalParams_.isEmpty()) {
          if (numericalParams_.isEmpty()) {
            numericalParams_ = other.numericalParams_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNumericalParamsIsMutable();
            numericalParams_.addAll(other.numericalParams_);
          }
          onChanged();
        }
        if (!other.strParams_.isEmpty()) {
          if (strParams_.isEmpty()) {
            strParams_ = other.strParams_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStrParamsIsMutable();
            strParams_.addAll(other.strParams_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.custom_task parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.custom_task) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<RemoteCommands.control> ctrlParams_ =
        java.util.Collections.emptyList();
      private void ensureCtrlParamsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ctrlParams_ = new java.util.ArrayList<RemoteCommands.control>(ctrlParams_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder> ctrlParamsBuilder_;

      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public java.util.List<RemoteCommands.control> getCtrlParamsList() {
        if (ctrlParamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ctrlParams_);
        } else {
          return ctrlParamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public int getCtrlParamsCount() {
        if (ctrlParamsBuilder_ == null) {
          return ctrlParams_.size();
        } else {
          return ctrlParamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public RemoteCommands.control getCtrlParams(int index) {
        if (ctrlParamsBuilder_ == null) {
          return ctrlParams_.get(index);
        } else {
          return ctrlParamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder setCtrlParams(
          int index, RemoteCommands.control value) {
        if (ctrlParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCtrlParamsIsMutable();
          ctrlParams_.set(index, value);
          onChanged();
        } else {
          ctrlParamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder setCtrlParams(
          int index, RemoteCommands.control.Builder builderForValue) {
        if (ctrlParamsBuilder_ == null) {
          ensureCtrlParamsIsMutable();
          ctrlParams_.set(index, builderForValue.build());
          onChanged();
        } else {
          ctrlParamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder addCtrlParams(RemoteCommands.control value) {
        if (ctrlParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCtrlParamsIsMutable();
          ctrlParams_.add(value);
          onChanged();
        } else {
          ctrlParamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder addCtrlParams(
          int index, RemoteCommands.control value) {
        if (ctrlParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCtrlParamsIsMutable();
          ctrlParams_.add(index, value);
          onChanged();
        } else {
          ctrlParamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder addCtrlParams(
          RemoteCommands.control.Builder builderForValue) {
        if (ctrlParamsBuilder_ == null) {
          ensureCtrlParamsIsMutable();
          ctrlParams_.add(builderForValue.build());
          onChanged();
        } else {
          ctrlParamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder addCtrlParams(
          int index, RemoteCommands.control.Builder builderForValue) {
        if (ctrlParamsBuilder_ == null) {
          ensureCtrlParamsIsMutable();
          ctrlParams_.add(index, builderForValue.build());
          onChanged();
        } else {
          ctrlParamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder addAllCtrlParams(
          java.lang.Iterable<? extends RemoteCommands.control> values) {
        if (ctrlParamsBuilder_ == null) {
          ensureCtrlParamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ctrlParams_);
          onChanged();
        } else {
          ctrlParamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder clearCtrlParams() {
        if (ctrlParamsBuilder_ == null) {
          ctrlParams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          ctrlParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public Builder removeCtrlParams(int index) {
        if (ctrlParamsBuilder_ == null) {
          ensureCtrlParamsIsMutable();
          ctrlParams_.remove(index);
          onChanged();
        } else {
          ctrlParamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public RemoteCommands.control.Builder getCtrlParamsBuilder(
          int index) {
        return getCtrlParamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public RemoteCommands.controlOrBuilder getCtrlParamsOrBuilder(
          int index) {
        if (ctrlParamsBuilder_ == null) {
          return ctrlParams_.get(index);  } else {
          return ctrlParamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public java.util.List<? extends RemoteCommands.controlOrBuilder> 
           getCtrlParamsOrBuilderList() {
        if (ctrlParamsBuilder_ != null) {
          return ctrlParamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ctrlParams_);
        }
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public RemoteCommands.control.Builder addCtrlParamsBuilder() {
        return getCtrlParamsFieldBuilder().addBuilder(
            RemoteCommands.control.getDefaultInstance());
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public RemoteCommands.control.Builder addCtrlParamsBuilder(
          int index) {
        return getCtrlParamsFieldBuilder().addBuilder(
            index, RemoteCommands.control.getDefaultInstance());
      }
      /**
       * <code>repeated .control ctrl_params = 2;</code>
       */
      public java.util.List<RemoteCommands.control.Builder> 
           getCtrlParamsBuilderList() {
        return getCtrlParamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder> 
          getCtrlParamsFieldBuilder() {
        if (ctrlParamsBuilder_ == null) {
          ctrlParamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder>(
                  ctrlParams_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          ctrlParams_ = null;
        }
        return ctrlParamsBuilder_;
      }

      private com.google.protobuf.Internal.FloatList numericalParams_ = emptyFloatList();
      private void ensureNumericalParamsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          numericalParams_ = mutableCopy(numericalParams_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float numerical_params = 3;</code>
       * @return A list containing the numericalParams.
       */
      public java.util.List<java.lang.Float>
          getNumericalParamsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(numericalParams_) : numericalParams_;
      }
      /**
       * <code>repeated float numerical_params = 3;</code>
       * @return The count of numericalParams.
       */
      public int getNumericalParamsCount() {
        return numericalParams_.size();
      }
      /**
       * <code>repeated float numerical_params = 3;</code>
       * @param index The index of the element to return.
       * @return The numericalParams at the given index.
       */
      public float getNumericalParams(int index) {
        return numericalParams_.getFloat(index);
      }
      /**
       * <code>repeated float numerical_params = 3;</code>
       * @param index The index to set the value at.
       * @param value The numericalParams to set.
       * @return This builder for chaining.
       */
      public Builder setNumericalParams(
          int index, float value) {
        ensureNumericalParamsIsMutable();
        numericalParams_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_params = 3;</code>
       * @param value The numericalParams to add.
       * @return This builder for chaining.
       */
      public Builder addNumericalParams(float value) {
        ensureNumericalParamsIsMutable();
        numericalParams_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_params = 3;</code>
       * @param values The numericalParams to add.
       * @return This builder for chaining.
       */
      public Builder addAllNumericalParams(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureNumericalParamsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, numericalParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_params = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumericalParams() {
        numericalParams_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList strParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrParamsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          strParams_ = new com.google.protobuf.LazyStringArrayList(strParams_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @return A list containing the strParams.
       */
      public com.google.protobuf.ProtocolStringList
          getStrParamsList() {
        return strParams_.getUnmodifiableView();
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @return The count of strParams.
       */
      public int getStrParamsCount() {
        return strParams_.size();
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @param index The index of the element to return.
       * @return The strParams at the given index.
       */
      public java.lang.String getStrParams(int index) {
        return strParams_.get(index);
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the strParams at the given index.
       */
      public com.google.protobuf.ByteString
          getStrParamsBytes(int index) {
        return strParams_.getByteString(index);
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @param index The index to set the value at.
       * @param value The strParams to set.
       * @return This builder for chaining.
       */
      public Builder setStrParams(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrParamsIsMutable();
        strParams_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @param value The strParams to add.
       * @return This builder for chaining.
       */
      public Builder addStrParams(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrParamsIsMutable();
        strParams_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @param values The strParams to add.
       * @return This builder for chaining.
       */
      public Builder addAllStrParams(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrParamsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, strParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrParams() {
        strParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_params = 4;</code>
       * @param value The bytes of the strParams to add.
       * @return This builder for chaining.
       */
      public Builder addStrParamsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureStrParamsIsMutable();
        strParams_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:custom_task)
    }

    // @@protoc_insertion_point(class_scope:custom_task)
    private static final RemoteCommands.custom_task DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.custom_task();
    }

    public static RemoteCommands.custom_task getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<custom_task>
        PARSER = new com.google.protobuf.AbstractParser<custom_task>() {
      @java.lang.Override
      public custom_task parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new custom_task(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<custom_task> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<custom_task> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.custom_task getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface data_requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:data_request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    java.util.List<RemoteCommands.control> 
        getCtrlDataList();
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    RemoteCommands.control getCtrlData(int index);
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    int getCtrlDataCount();
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    java.util.List<? extends RemoteCommands.controlOrBuilder> 
        getCtrlDataOrBuilderList();
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    RemoteCommands.controlOrBuilder getCtrlDataOrBuilder(
        int index);

    /**
     * <code>repeated float numerical_data = 3;</code>
     * @return A list containing the numericalData.
     */
    java.util.List<java.lang.Float> getNumericalDataList();
    /**
     * <code>repeated float numerical_data = 3;</code>
     * @return The count of numericalData.
     */
    int getNumericalDataCount();
    /**
     * <code>repeated float numerical_data = 3;</code>
     * @param index The index of the element to return.
     * @return The numericalData at the given index.
     */
    float getNumericalData(int index);

    /**
     * <code>repeated string str_data = 4;</code>
     * @return A list containing the strData.
     */
    java.util.List<java.lang.String>
        getStrDataList();
    /**
     * <code>repeated string str_data = 4;</code>
     * @return The count of strData.
     */
    int getStrDataCount();
    /**
     * <code>repeated string str_data = 4;</code>
     * @param index The index of the element to return.
     * @return The strData at the given index.
     */
    java.lang.String getStrData(int index);
    /**
     * <code>repeated string str_data = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the strData at the given index.
     */
    com.google.protobuf.ByteString
        getStrDataBytes(int index);
  }
  /**
   * <pre>
   * request data from a robot
   * </pre>
   *
   * Protobuf type {@code data_request}
   */
  public  static final class data_request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:data_request)
      data_requestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use data_request.newBuilder() to construct.
    private data_request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private data_request() {
      name_ = "";
      ctrlData_ = java.util.Collections.emptyList();
      numericalData_ = emptyFloatList();
      strData_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new data_request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private data_request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                ctrlData_ = new java.util.ArrayList<RemoteCommands.control>();
                mutable_bitField0_ |= 0x00000001;
              }
              ctrlData_.add(
                  input.readMessage(RemoteCommands.control.parser(), extensionRegistry));
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                numericalData_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              numericalData_.addFloat(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                numericalData_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                numericalData_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                strData_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              strData_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          ctrlData_ = java.util.Collections.unmodifiableList(ctrlData_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          numericalData_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          strData_ = strData_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_data_request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_data_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.data_request.class, RemoteCommands.data_request.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CTRL_DATA_FIELD_NUMBER = 2;
    private java.util.List<RemoteCommands.control> ctrlData_;
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    public java.util.List<RemoteCommands.control> getCtrlDataList() {
      return ctrlData_;
    }
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    public java.util.List<? extends RemoteCommands.controlOrBuilder> 
        getCtrlDataOrBuilderList() {
      return ctrlData_;
    }
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    public int getCtrlDataCount() {
      return ctrlData_.size();
    }
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    public RemoteCommands.control getCtrlData(int index) {
      return ctrlData_.get(index);
    }
    /**
     * <code>repeated .control ctrl_data = 2;</code>
     */
    public RemoteCommands.controlOrBuilder getCtrlDataOrBuilder(
        int index) {
      return ctrlData_.get(index);
    }

    public static final int NUMERICAL_DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList numericalData_;
    /**
     * <code>repeated float numerical_data = 3;</code>
     * @return A list containing the numericalData.
     */
    public java.util.List<java.lang.Float>
        getNumericalDataList() {
      return numericalData_;
    }
    /**
     * <code>repeated float numerical_data = 3;</code>
     * @return The count of numericalData.
     */
    public int getNumericalDataCount() {
      return numericalData_.size();
    }
    /**
     * <code>repeated float numerical_data = 3;</code>
     * @param index The index of the element to return.
     * @return The numericalData at the given index.
     */
    public float getNumericalData(int index) {
      return numericalData_.getFloat(index);
    }
    private int numericalDataMemoizedSerializedSize = -1;

    public static final int STR_DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList strData_;
    /**
     * <code>repeated string str_data = 4;</code>
     * @return A list containing the strData.
     */
    public com.google.protobuf.ProtocolStringList
        getStrDataList() {
      return strData_;
    }
    /**
     * <code>repeated string str_data = 4;</code>
     * @return The count of strData.
     */
    public int getStrDataCount() {
      return strData_.size();
    }
    /**
     * <code>repeated string str_data = 4;</code>
     * @param index The index of the element to return.
     * @return The strData at the given index.
     */
    public java.lang.String getStrData(int index) {
      return strData_.get(index);
    }
    /**
     * <code>repeated string str_data = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the strData at the given index.
     */
    public com.google.protobuf.ByteString
        getStrDataBytes(int index) {
      return strData_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < ctrlData_.size(); i++) {
        output.writeMessage(2, ctrlData_.get(i));
      }
      if (getNumericalDataList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(numericalDataMemoizedSerializedSize);
      }
      for (int i = 0; i < numericalData_.size(); i++) {
        output.writeFloatNoTag(numericalData_.getFloat(i));
      }
      for (int i = 0; i < strData_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, strData_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < ctrlData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ctrlData_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 4 * getNumericalDataList().size();
        size += dataSize;
        if (!getNumericalDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numericalDataMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strData_.size(); i++) {
          dataSize += computeStringSizeNoTag(strData_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStrDataList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.data_request)) {
        return super.equals(obj);
      }
      RemoteCommands.data_request other = (RemoteCommands.data_request) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getCtrlDataList()
          .equals(other.getCtrlDataList())) return false;
      if (!getNumericalDataList()
          .equals(other.getNumericalDataList())) return false;
      if (!getStrDataList()
          .equals(other.getStrDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getCtrlDataCount() > 0) {
        hash = (37 * hash) + CTRL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getCtrlDataList().hashCode();
      }
      if (getNumericalDataCount() > 0) {
        hash = (37 * hash) + NUMERICAL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getNumericalDataList().hashCode();
      }
      if (getStrDataCount() > 0) {
        hash = (37 * hash) + STR_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getStrDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.data_request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.data_request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.data_request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.data_request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.data_request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.data_request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.data_request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.data_request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.data_request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.data_request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.data_request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.data_request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.data_request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * request data from a robot
     * </pre>
     *
     * Protobuf type {@code data_request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:data_request)
        RemoteCommands.data_requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_data_request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_data_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.data_request.class, RemoteCommands.data_request.Builder.class);
      }

      // Construct using RemoteCommands.data_request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCtrlDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (ctrlDataBuilder_ == null) {
          ctrlData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ctrlDataBuilder_.clear();
        }
        numericalData_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        strData_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_data_request_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.data_request getDefaultInstanceForType() {
        return RemoteCommands.data_request.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.data_request build() {
        RemoteCommands.data_request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.data_request buildPartial() {
        RemoteCommands.data_request result = new RemoteCommands.data_request(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        if (ctrlDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            ctrlData_ = java.util.Collections.unmodifiableList(ctrlData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ctrlData_ = ctrlData_;
        } else {
          result.ctrlData_ = ctrlDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          numericalData_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.numericalData_ = numericalData_;
        if (((bitField0_ & 0x00000004) != 0)) {
          strData_ = strData_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.strData_ = strData_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.data_request) {
          return mergeFrom((RemoteCommands.data_request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.data_request other) {
        if (other == RemoteCommands.data_request.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (ctrlDataBuilder_ == null) {
          if (!other.ctrlData_.isEmpty()) {
            if (ctrlData_.isEmpty()) {
              ctrlData_ = other.ctrlData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCtrlDataIsMutable();
              ctrlData_.addAll(other.ctrlData_);
            }
            onChanged();
          }
        } else {
          if (!other.ctrlData_.isEmpty()) {
            if (ctrlDataBuilder_.isEmpty()) {
              ctrlDataBuilder_.dispose();
              ctrlDataBuilder_ = null;
              ctrlData_ = other.ctrlData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              ctrlDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCtrlDataFieldBuilder() : null;
            } else {
              ctrlDataBuilder_.addAllMessages(other.ctrlData_);
            }
          }
        }
        if (!other.numericalData_.isEmpty()) {
          if (numericalData_.isEmpty()) {
            numericalData_ = other.numericalData_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNumericalDataIsMutable();
            numericalData_.addAll(other.numericalData_);
          }
          onChanged();
        }
        if (!other.strData_.isEmpty()) {
          if (strData_.isEmpty()) {
            strData_ = other.strData_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStrDataIsMutable();
            strData_.addAll(other.strData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.data_request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.data_request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<RemoteCommands.control> ctrlData_ =
        java.util.Collections.emptyList();
      private void ensureCtrlDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ctrlData_ = new java.util.ArrayList<RemoteCommands.control>(ctrlData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder> ctrlDataBuilder_;

      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public java.util.List<RemoteCommands.control> getCtrlDataList() {
        if (ctrlDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ctrlData_);
        } else {
          return ctrlDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public int getCtrlDataCount() {
        if (ctrlDataBuilder_ == null) {
          return ctrlData_.size();
        } else {
          return ctrlDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public RemoteCommands.control getCtrlData(int index) {
        if (ctrlDataBuilder_ == null) {
          return ctrlData_.get(index);
        } else {
          return ctrlDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder setCtrlData(
          int index, RemoteCommands.control value) {
        if (ctrlDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCtrlDataIsMutable();
          ctrlData_.set(index, value);
          onChanged();
        } else {
          ctrlDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder setCtrlData(
          int index, RemoteCommands.control.Builder builderForValue) {
        if (ctrlDataBuilder_ == null) {
          ensureCtrlDataIsMutable();
          ctrlData_.set(index, builderForValue.build());
          onChanged();
        } else {
          ctrlDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder addCtrlData(RemoteCommands.control value) {
        if (ctrlDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCtrlDataIsMutable();
          ctrlData_.add(value);
          onChanged();
        } else {
          ctrlDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder addCtrlData(
          int index, RemoteCommands.control value) {
        if (ctrlDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCtrlDataIsMutable();
          ctrlData_.add(index, value);
          onChanged();
        } else {
          ctrlDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder addCtrlData(
          RemoteCommands.control.Builder builderForValue) {
        if (ctrlDataBuilder_ == null) {
          ensureCtrlDataIsMutable();
          ctrlData_.add(builderForValue.build());
          onChanged();
        } else {
          ctrlDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder addCtrlData(
          int index, RemoteCommands.control.Builder builderForValue) {
        if (ctrlDataBuilder_ == null) {
          ensureCtrlDataIsMutable();
          ctrlData_.add(index, builderForValue.build());
          onChanged();
        } else {
          ctrlDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder addAllCtrlData(
          java.lang.Iterable<? extends RemoteCommands.control> values) {
        if (ctrlDataBuilder_ == null) {
          ensureCtrlDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ctrlData_);
          onChanged();
        } else {
          ctrlDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder clearCtrlData() {
        if (ctrlDataBuilder_ == null) {
          ctrlData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          ctrlDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public Builder removeCtrlData(int index) {
        if (ctrlDataBuilder_ == null) {
          ensureCtrlDataIsMutable();
          ctrlData_.remove(index);
          onChanged();
        } else {
          ctrlDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public RemoteCommands.control.Builder getCtrlDataBuilder(
          int index) {
        return getCtrlDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public RemoteCommands.controlOrBuilder getCtrlDataOrBuilder(
          int index) {
        if (ctrlDataBuilder_ == null) {
          return ctrlData_.get(index);  } else {
          return ctrlDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public java.util.List<? extends RemoteCommands.controlOrBuilder> 
           getCtrlDataOrBuilderList() {
        if (ctrlDataBuilder_ != null) {
          return ctrlDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ctrlData_);
        }
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public RemoteCommands.control.Builder addCtrlDataBuilder() {
        return getCtrlDataFieldBuilder().addBuilder(
            RemoteCommands.control.getDefaultInstance());
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public RemoteCommands.control.Builder addCtrlDataBuilder(
          int index) {
        return getCtrlDataFieldBuilder().addBuilder(
            index, RemoteCommands.control.getDefaultInstance());
      }
      /**
       * <code>repeated .control ctrl_data = 2;</code>
       */
      public java.util.List<RemoteCommands.control.Builder> 
           getCtrlDataBuilderList() {
        return getCtrlDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder> 
          getCtrlDataFieldBuilder() {
        if (ctrlDataBuilder_ == null) {
          ctrlDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder>(
                  ctrlData_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          ctrlData_ = null;
        }
        return ctrlDataBuilder_;
      }

      private com.google.protobuf.Internal.FloatList numericalData_ = emptyFloatList();
      private void ensureNumericalDataIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          numericalData_ = mutableCopy(numericalData_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float numerical_data = 3;</code>
       * @return A list containing the numericalData.
       */
      public java.util.List<java.lang.Float>
          getNumericalDataList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(numericalData_) : numericalData_;
      }
      /**
       * <code>repeated float numerical_data = 3;</code>
       * @return The count of numericalData.
       */
      public int getNumericalDataCount() {
        return numericalData_.size();
      }
      /**
       * <code>repeated float numerical_data = 3;</code>
       * @param index The index of the element to return.
       * @return The numericalData at the given index.
       */
      public float getNumericalData(int index) {
        return numericalData_.getFloat(index);
      }
      /**
       * <code>repeated float numerical_data = 3;</code>
       * @param index The index to set the value at.
       * @param value The numericalData to set.
       * @return This builder for chaining.
       */
      public Builder setNumericalData(
          int index, float value) {
        ensureNumericalDataIsMutable();
        numericalData_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_data = 3;</code>
       * @param value The numericalData to add.
       * @return This builder for chaining.
       */
      public Builder addNumericalData(float value) {
        ensureNumericalDataIsMutable();
        numericalData_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_data = 3;</code>
       * @param values The numericalData to add.
       * @return This builder for chaining.
       */
      public Builder addAllNumericalData(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureNumericalDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, numericalData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float numerical_data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumericalData() {
        numericalData_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList strData_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrDataIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          strData_ = new com.google.protobuf.LazyStringArrayList(strData_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @return A list containing the strData.
       */
      public com.google.protobuf.ProtocolStringList
          getStrDataList() {
        return strData_.getUnmodifiableView();
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @return The count of strData.
       */
      public int getStrDataCount() {
        return strData_.size();
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @param index The index of the element to return.
       * @return The strData at the given index.
       */
      public java.lang.String getStrData(int index) {
        return strData_.get(index);
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the strData at the given index.
       */
      public com.google.protobuf.ByteString
          getStrDataBytes(int index) {
        return strData_.getByteString(index);
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @param index The index to set the value at.
       * @param value The strData to set.
       * @return This builder for chaining.
       */
      public Builder setStrData(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrDataIsMutable();
        strData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @param value The strData to add.
       * @return This builder for chaining.
       */
      public Builder addStrData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrDataIsMutable();
        strData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @param values The strData to add.
       * @return This builder for chaining.
       */
      public Builder addAllStrData(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, strData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrData() {
        strData_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string str_data = 4;</code>
       * @param value The bytes of the strData to add.
       * @return This builder for chaining.
       */
      public Builder addStrDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureStrDataIsMutable();
        strData_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:data_request)
    }

    // @@protoc_insertion_point(class_scope:data_request)
    private static final RemoteCommands.data_request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.data_request();
    }

    public static RemoteCommands.data_request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<data_request>
        PARSER = new com.google.protobuf.AbstractParser<data_request>() {
      @java.lang.Override
      public data_request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new data_request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<data_request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<data_request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.data_request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface remote_commandsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:remote_commands)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * name of the command indicating the type of command
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * name of the command indicating the type of command
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * basic control
     * </pre>
     *
     * <code>.control ctrl = 2;</code>
     * @return Whether the ctrl field is set.
     */
    boolean hasCtrl();
    /**
     * <pre>
     * basic control
     * </pre>
     *
     * <code>.control ctrl = 2;</code>
     * @return The ctrl.
     */
    RemoteCommands.control getCtrl();
    /**
     * <pre>
     * basic control
     * </pre>
     *
     * <code>.control ctrl = 2;</code>
     */
    RemoteCommands.controlOrBuilder getCtrlOrBuilder();

    /**
     * <pre>
     * custom control
     * </pre>
     *
     * <code>.custom_control cust_ctrl = 3;</code>
     * @return Whether the custCtrl field is set.
     */
    boolean hasCustCtrl();
    /**
     * <pre>
     * custom control
     * </pre>
     *
     * <code>.custom_control cust_ctrl = 3;</code>
     * @return The custCtrl.
     */
    RemoteCommands.custom_control getCustCtrl();
    /**
     * <pre>
     * custom control
     * </pre>
     *
     * <code>.custom_control cust_ctrl = 3;</code>
     */
    RemoteCommands.custom_controlOrBuilder getCustCtrlOrBuilder();

    /**
     * <pre>
     * highlevel task
     * </pre>
     *
     * <code>.custom_task task = 4;</code>
     * @return Whether the task field is set.
     */
    boolean hasTask();
    /**
     * <pre>
     * highlevel task
     * </pre>
     *
     * <code>.custom_task task = 4;</code>
     * @return The task.
     */
    RemoteCommands.custom_task getTask();
    /**
     * <pre>
     * highlevel task
     * </pre>
     *
     * <code>.custom_task task = 4;</code>
     */
    RemoteCommands.custom_taskOrBuilder getTaskOrBuilder();

    /**
     * <pre>
     * AI can request data to fetch from a robot
     * </pre>
     *
     * <code>.data_request request = 5;</code>
     * @return Whether the request field is set.
     */
    boolean hasRequest();
    /**
     * <pre>
     * AI can request data to fetch from a robot
     * </pre>
     *
     * <code>.data_request request = 5;</code>
     * @return The request.
     */
    RemoteCommands.data_request getRequest();
    /**
     * <pre>
     * AI can request data to fetch from a robot
     * </pre>
     *
     * <code>.data_request request = 5;</code>
     */
    RemoteCommands.data_requestOrBuilder getRequestOrBuilder();

    /**
     * <pre>
     * static field object to be initalized on program start
     * </pre>
     *
     * <code>.static_data to_init = 6;</code>
     * @return Whether the toInit field is set.
     */
    boolean hasToInit();
    /**
     * <pre>
     * static field object to be initalized on program start
     * </pre>
     *
     * <code>.static_data to_init = 6;</code>
     * @return The toInit.
     */
    RemoteCommands.static_data getToInit();
    /**
     * <pre>
     * static field object to be initalized on program start
     * </pre>
     *
     * <code>.static_data to_init = 6;</code>
     */
    RemoteCommands.static_dataOrBuilder getToInitOrBuilder();
  }
  /**
   * Protobuf type {@code remote_commands}
   */
  public  static final class remote_commands extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:remote_commands)
      remote_commandsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use remote_commands.newBuilder() to construct.
    private remote_commands(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private remote_commands() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new remote_commands();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private remote_commands(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              RemoteCommands.control.Builder subBuilder = null;
              if (ctrl_ != null) {
                subBuilder = ctrl_.toBuilder();
              }
              ctrl_ = input.readMessage(RemoteCommands.control.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ctrl_);
                ctrl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              RemoteCommands.custom_control.Builder subBuilder = null;
              if (custCtrl_ != null) {
                subBuilder = custCtrl_.toBuilder();
              }
              custCtrl_ = input.readMessage(RemoteCommands.custom_control.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(custCtrl_);
                custCtrl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              RemoteCommands.custom_task.Builder subBuilder = null;
              if (task_ != null) {
                subBuilder = task_.toBuilder();
              }
              task_ = input.readMessage(RemoteCommands.custom_task.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(task_);
                task_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              RemoteCommands.data_request.Builder subBuilder = null;
              if (request_ != null) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(RemoteCommands.data_request.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              RemoteCommands.static_data.Builder subBuilder = null;
              if (toInit_ != null) {
                subBuilder = toInit_.toBuilder();
              }
              toInit_ = input.readMessage(RemoteCommands.static_data.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toInit_);
                toInit_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteCommands.internal_static_remote_commands_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteCommands.internal_static_remote_commands_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteCommands.remote_commands.class, RemoteCommands.remote_commands.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name of the command indicating the type of command
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name of the command indicating the type of command
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CTRL_FIELD_NUMBER = 2;
    private RemoteCommands.control ctrl_;
    /**
     * <pre>
     * basic control
     * </pre>
     *
     * <code>.control ctrl = 2;</code>
     * @return Whether the ctrl field is set.
     */
    public boolean hasCtrl() {
      return ctrl_ != null;
    }
    /**
     * <pre>
     * basic control
     * </pre>
     *
     * <code>.control ctrl = 2;</code>
     * @return The ctrl.
     */
    public RemoteCommands.control getCtrl() {
      return ctrl_ == null ? RemoteCommands.control.getDefaultInstance() : ctrl_;
    }
    /**
     * <pre>
     * basic control
     * </pre>
     *
     * <code>.control ctrl = 2;</code>
     */
    public RemoteCommands.controlOrBuilder getCtrlOrBuilder() {
      return getCtrl();
    }

    public static final int CUST_CTRL_FIELD_NUMBER = 3;
    private RemoteCommands.custom_control custCtrl_;
    /**
     * <pre>
     * custom control
     * </pre>
     *
     * <code>.custom_control cust_ctrl = 3;</code>
     * @return Whether the custCtrl field is set.
     */
    public boolean hasCustCtrl() {
      return custCtrl_ != null;
    }
    /**
     * <pre>
     * custom control
     * </pre>
     *
     * <code>.custom_control cust_ctrl = 3;</code>
     * @return The custCtrl.
     */
    public RemoteCommands.custom_control getCustCtrl() {
      return custCtrl_ == null ? RemoteCommands.custom_control.getDefaultInstance() : custCtrl_;
    }
    /**
     * <pre>
     * custom control
     * </pre>
     *
     * <code>.custom_control cust_ctrl = 3;</code>
     */
    public RemoteCommands.custom_controlOrBuilder getCustCtrlOrBuilder() {
      return getCustCtrl();
    }

    public static final int TASK_FIELD_NUMBER = 4;
    private RemoteCommands.custom_task task_;
    /**
     * <pre>
     * highlevel task
     * </pre>
     *
     * <code>.custom_task task = 4;</code>
     * @return Whether the task field is set.
     */
    public boolean hasTask() {
      return task_ != null;
    }
    /**
     * <pre>
     * highlevel task
     * </pre>
     *
     * <code>.custom_task task = 4;</code>
     * @return The task.
     */
    public RemoteCommands.custom_task getTask() {
      return task_ == null ? RemoteCommands.custom_task.getDefaultInstance() : task_;
    }
    /**
     * <pre>
     * highlevel task
     * </pre>
     *
     * <code>.custom_task task = 4;</code>
     */
    public RemoteCommands.custom_taskOrBuilder getTaskOrBuilder() {
      return getTask();
    }

    public static final int REQUEST_FIELD_NUMBER = 5;
    private RemoteCommands.data_request request_;
    /**
     * <pre>
     * AI can request data to fetch from a robot
     * </pre>
     *
     * <code>.data_request request = 5;</code>
     * @return Whether the request field is set.
     */
    public boolean hasRequest() {
      return request_ != null;
    }
    /**
     * <pre>
     * AI can request data to fetch from a robot
     * </pre>
     *
     * <code>.data_request request = 5;</code>
     * @return The request.
     */
    public RemoteCommands.data_request getRequest() {
      return request_ == null ? RemoteCommands.data_request.getDefaultInstance() : request_;
    }
    /**
     * <pre>
     * AI can request data to fetch from a robot
     * </pre>
     *
     * <code>.data_request request = 5;</code>
     */
    public RemoteCommands.data_requestOrBuilder getRequestOrBuilder() {
      return getRequest();
    }

    public static final int TO_INIT_FIELD_NUMBER = 6;
    private RemoteCommands.static_data toInit_;
    /**
     * <pre>
     * static field object to be initalized on program start
     * </pre>
     *
     * <code>.static_data to_init = 6;</code>
     * @return Whether the toInit field is set.
     */
    public boolean hasToInit() {
      return toInit_ != null;
    }
    /**
     * <pre>
     * static field object to be initalized on program start
     * </pre>
     *
     * <code>.static_data to_init = 6;</code>
     * @return The toInit.
     */
    public RemoteCommands.static_data getToInit() {
      return toInit_ == null ? RemoteCommands.static_data.getDefaultInstance() : toInit_;
    }
    /**
     * <pre>
     * static field object to be initalized on program start
     * </pre>
     *
     * <code>.static_data to_init = 6;</code>
     */
    public RemoteCommands.static_dataOrBuilder getToInitOrBuilder() {
      return getToInit();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (ctrl_ != null) {
        output.writeMessage(2, getCtrl());
      }
      if (custCtrl_ != null) {
        output.writeMessage(3, getCustCtrl());
      }
      if (task_ != null) {
        output.writeMessage(4, getTask());
      }
      if (request_ != null) {
        output.writeMessage(5, getRequest());
      }
      if (toInit_ != null) {
        output.writeMessage(6, getToInit());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (ctrl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCtrl());
      }
      if (custCtrl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCustCtrl());
      }
      if (task_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTask());
      }
      if (request_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRequest());
      }
      if (toInit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getToInit());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteCommands.remote_commands)) {
        return super.equals(obj);
      }
      RemoteCommands.remote_commands other = (RemoteCommands.remote_commands) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasCtrl() != other.hasCtrl()) return false;
      if (hasCtrl()) {
        if (!getCtrl()
            .equals(other.getCtrl())) return false;
      }
      if (hasCustCtrl() != other.hasCustCtrl()) return false;
      if (hasCustCtrl()) {
        if (!getCustCtrl()
            .equals(other.getCustCtrl())) return false;
      }
      if (hasTask() != other.hasTask()) return false;
      if (hasTask()) {
        if (!getTask()
            .equals(other.getTask())) return false;
      }
      if (hasRequest() != other.hasRequest()) return false;
      if (hasRequest()) {
        if (!getRequest()
            .equals(other.getRequest())) return false;
      }
      if (hasToInit() != other.hasToInit()) return false;
      if (hasToInit()) {
        if (!getToInit()
            .equals(other.getToInit())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasCtrl()) {
        hash = (37 * hash) + CTRL_FIELD_NUMBER;
        hash = (53 * hash) + getCtrl().hashCode();
      }
      if (hasCustCtrl()) {
        hash = (37 * hash) + CUST_CTRL_FIELD_NUMBER;
        hash = (53 * hash) + getCustCtrl().hashCode();
      }
      if (hasTask()) {
        hash = (37 * hash) + TASK_FIELD_NUMBER;
        hash = (53 * hash) + getTask().hashCode();
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasToInit()) {
        hash = (37 * hash) + TO_INIT_FIELD_NUMBER;
        hash = (53 * hash) + getToInit().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCommands.remote_commands parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.remote_commands parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.remote_commands parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.remote_commands parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.remote_commands parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteCommands.remote_commands parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteCommands.remote_commands parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.remote_commands parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.remote_commands parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteCommands.remote_commands parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteCommands.remote_commands parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteCommands.remote_commands parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteCommands.remote_commands prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code remote_commands}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:remote_commands)
        RemoteCommands.remote_commandsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteCommands.internal_static_remote_commands_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteCommands.internal_static_remote_commands_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteCommands.remote_commands.class, RemoteCommands.remote_commands.Builder.class);
      }

      // Construct using RemoteCommands.remote_commands.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (ctrlBuilder_ == null) {
          ctrl_ = null;
        } else {
          ctrl_ = null;
          ctrlBuilder_ = null;
        }
        if (custCtrlBuilder_ == null) {
          custCtrl_ = null;
        } else {
          custCtrl_ = null;
          custCtrlBuilder_ = null;
        }
        if (taskBuilder_ == null) {
          task_ = null;
        } else {
          task_ = null;
          taskBuilder_ = null;
        }
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          request_ = null;
          requestBuilder_ = null;
        }
        if (toInitBuilder_ == null) {
          toInit_ = null;
        } else {
          toInit_ = null;
          toInitBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteCommands.internal_static_remote_commands_descriptor;
      }

      @java.lang.Override
      public RemoteCommands.remote_commands getDefaultInstanceForType() {
        return RemoteCommands.remote_commands.getDefaultInstance();
      }

      @java.lang.Override
      public RemoteCommands.remote_commands build() {
        RemoteCommands.remote_commands result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RemoteCommands.remote_commands buildPartial() {
        RemoteCommands.remote_commands result = new RemoteCommands.remote_commands(this);
        result.name_ = name_;
        if (ctrlBuilder_ == null) {
          result.ctrl_ = ctrl_;
        } else {
          result.ctrl_ = ctrlBuilder_.build();
        }
        if (custCtrlBuilder_ == null) {
          result.custCtrl_ = custCtrl_;
        } else {
          result.custCtrl_ = custCtrlBuilder_.build();
        }
        if (taskBuilder_ == null) {
          result.task_ = task_;
        } else {
          result.task_ = taskBuilder_.build();
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (toInitBuilder_ == null) {
          result.toInit_ = toInit_;
        } else {
          result.toInit_ = toInitBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCommands.remote_commands) {
          return mergeFrom((RemoteCommands.remote_commands)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCommands.remote_commands other) {
        if (other == RemoteCommands.remote_commands.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasCtrl()) {
          mergeCtrl(other.getCtrl());
        }
        if (other.hasCustCtrl()) {
          mergeCustCtrl(other.getCustCtrl());
        }
        if (other.hasTask()) {
          mergeTask(other.getTask());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasToInit()) {
          mergeToInit(other.getToInit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteCommands.remote_commands parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCommands.remote_commands) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name of the command indicating the type of command
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of the command indicating the type of command
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of the command indicating the type of command
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the command indicating the type of command
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the command indicating the type of command
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private RemoteCommands.control ctrl_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder> ctrlBuilder_;
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       * @return Whether the ctrl field is set.
       */
      public boolean hasCtrl() {
        return ctrlBuilder_ != null || ctrl_ != null;
      }
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       * @return The ctrl.
       */
      public RemoteCommands.control getCtrl() {
        if (ctrlBuilder_ == null) {
          return ctrl_ == null ? RemoteCommands.control.getDefaultInstance() : ctrl_;
        } else {
          return ctrlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       */
      public Builder setCtrl(RemoteCommands.control value) {
        if (ctrlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ctrl_ = value;
          onChanged();
        } else {
          ctrlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       */
      public Builder setCtrl(
          RemoteCommands.control.Builder builderForValue) {
        if (ctrlBuilder_ == null) {
          ctrl_ = builderForValue.build();
          onChanged();
        } else {
          ctrlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       */
      public Builder mergeCtrl(RemoteCommands.control value) {
        if (ctrlBuilder_ == null) {
          if (ctrl_ != null) {
            ctrl_ =
              RemoteCommands.control.newBuilder(ctrl_).mergeFrom(value).buildPartial();
          } else {
            ctrl_ = value;
          }
          onChanged();
        } else {
          ctrlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       */
      public Builder clearCtrl() {
        if (ctrlBuilder_ == null) {
          ctrl_ = null;
          onChanged();
        } else {
          ctrl_ = null;
          ctrlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       */
      public RemoteCommands.control.Builder getCtrlBuilder() {
        
        onChanged();
        return getCtrlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       */
      public RemoteCommands.controlOrBuilder getCtrlOrBuilder() {
        if (ctrlBuilder_ != null) {
          return ctrlBuilder_.getMessageOrBuilder();
        } else {
          return ctrl_ == null ?
              RemoteCommands.control.getDefaultInstance() : ctrl_;
        }
      }
      /**
       * <pre>
       * basic control
       * </pre>
       *
       * <code>.control ctrl = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder> 
          getCtrlFieldBuilder() {
        if (ctrlBuilder_ == null) {
          ctrlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.control, RemoteCommands.control.Builder, RemoteCommands.controlOrBuilder>(
                  getCtrl(),
                  getParentForChildren(),
                  isClean());
          ctrl_ = null;
        }
        return ctrlBuilder_;
      }

      private RemoteCommands.custom_control custCtrl_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.custom_control, RemoteCommands.custom_control.Builder, RemoteCommands.custom_controlOrBuilder> custCtrlBuilder_;
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       * @return Whether the custCtrl field is set.
       */
      public boolean hasCustCtrl() {
        return custCtrlBuilder_ != null || custCtrl_ != null;
      }
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       * @return The custCtrl.
       */
      public RemoteCommands.custom_control getCustCtrl() {
        if (custCtrlBuilder_ == null) {
          return custCtrl_ == null ? RemoteCommands.custom_control.getDefaultInstance() : custCtrl_;
        } else {
          return custCtrlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       */
      public Builder setCustCtrl(RemoteCommands.custom_control value) {
        if (custCtrlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          custCtrl_ = value;
          onChanged();
        } else {
          custCtrlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       */
      public Builder setCustCtrl(
          RemoteCommands.custom_control.Builder builderForValue) {
        if (custCtrlBuilder_ == null) {
          custCtrl_ = builderForValue.build();
          onChanged();
        } else {
          custCtrlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       */
      public Builder mergeCustCtrl(RemoteCommands.custom_control value) {
        if (custCtrlBuilder_ == null) {
          if (custCtrl_ != null) {
            custCtrl_ =
              RemoteCommands.custom_control.newBuilder(custCtrl_).mergeFrom(value).buildPartial();
          } else {
            custCtrl_ = value;
          }
          onChanged();
        } else {
          custCtrlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       */
      public Builder clearCustCtrl() {
        if (custCtrlBuilder_ == null) {
          custCtrl_ = null;
          onChanged();
        } else {
          custCtrl_ = null;
          custCtrlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       */
      public RemoteCommands.custom_control.Builder getCustCtrlBuilder() {
        
        onChanged();
        return getCustCtrlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       */
      public RemoteCommands.custom_controlOrBuilder getCustCtrlOrBuilder() {
        if (custCtrlBuilder_ != null) {
          return custCtrlBuilder_.getMessageOrBuilder();
        } else {
          return custCtrl_ == null ?
              RemoteCommands.custom_control.getDefaultInstance() : custCtrl_;
        }
      }
      /**
       * <pre>
       * custom control
       * </pre>
       *
       * <code>.custom_control cust_ctrl = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.custom_control, RemoteCommands.custom_control.Builder, RemoteCommands.custom_controlOrBuilder> 
          getCustCtrlFieldBuilder() {
        if (custCtrlBuilder_ == null) {
          custCtrlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.custom_control, RemoteCommands.custom_control.Builder, RemoteCommands.custom_controlOrBuilder>(
                  getCustCtrl(),
                  getParentForChildren(),
                  isClean());
          custCtrl_ = null;
        }
        return custCtrlBuilder_;
      }

      private RemoteCommands.custom_task task_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.custom_task, RemoteCommands.custom_task.Builder, RemoteCommands.custom_taskOrBuilder> taskBuilder_;
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       * @return Whether the task field is set.
       */
      public boolean hasTask() {
        return taskBuilder_ != null || task_ != null;
      }
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       * @return The task.
       */
      public RemoteCommands.custom_task getTask() {
        if (taskBuilder_ == null) {
          return task_ == null ? RemoteCommands.custom_task.getDefaultInstance() : task_;
        } else {
          return taskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       */
      public Builder setTask(RemoteCommands.custom_task value) {
        if (taskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          task_ = value;
          onChanged();
        } else {
          taskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       */
      public Builder setTask(
          RemoteCommands.custom_task.Builder builderForValue) {
        if (taskBuilder_ == null) {
          task_ = builderForValue.build();
          onChanged();
        } else {
          taskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       */
      public Builder mergeTask(RemoteCommands.custom_task value) {
        if (taskBuilder_ == null) {
          if (task_ != null) {
            task_ =
              RemoteCommands.custom_task.newBuilder(task_).mergeFrom(value).buildPartial();
          } else {
            task_ = value;
          }
          onChanged();
        } else {
          taskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       */
      public Builder clearTask() {
        if (taskBuilder_ == null) {
          task_ = null;
          onChanged();
        } else {
          task_ = null;
          taskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       */
      public RemoteCommands.custom_task.Builder getTaskBuilder() {
        
        onChanged();
        return getTaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       */
      public RemoteCommands.custom_taskOrBuilder getTaskOrBuilder() {
        if (taskBuilder_ != null) {
          return taskBuilder_.getMessageOrBuilder();
        } else {
          return task_ == null ?
              RemoteCommands.custom_task.getDefaultInstance() : task_;
        }
      }
      /**
       * <pre>
       * highlevel task
       * </pre>
       *
       * <code>.custom_task task = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.custom_task, RemoteCommands.custom_task.Builder, RemoteCommands.custom_taskOrBuilder> 
          getTaskFieldBuilder() {
        if (taskBuilder_ == null) {
          taskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.custom_task, RemoteCommands.custom_task.Builder, RemoteCommands.custom_taskOrBuilder>(
                  getTask(),
                  getParentForChildren(),
                  isClean());
          task_ = null;
        }
        return taskBuilder_;
      }

      private RemoteCommands.data_request request_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.data_request, RemoteCommands.data_request.Builder, RemoteCommands.data_requestOrBuilder> requestBuilder_;
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       * @return Whether the request field is set.
       */
      public boolean hasRequest() {
        return requestBuilder_ != null || request_ != null;
      }
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       * @return The request.
       */
      public RemoteCommands.data_request getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? RemoteCommands.data_request.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       */
      public Builder setRequest(RemoteCommands.data_request value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       */
      public Builder setRequest(
          RemoteCommands.data_request.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       */
      public Builder mergeRequest(RemoteCommands.data_request value) {
        if (requestBuilder_ == null) {
          if (request_ != null) {
            request_ =
              RemoteCommands.data_request.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          request_ = null;
          requestBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       */
      public RemoteCommands.data_request.Builder getRequestBuilder() {
        
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       */
      public RemoteCommands.data_requestOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              RemoteCommands.data_request.getDefaultInstance() : request_;
        }
      }
      /**
       * <pre>
       * AI can request data to fetch from a robot
       * </pre>
       *
       * <code>.data_request request = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.data_request, RemoteCommands.data_request.Builder, RemoteCommands.data_requestOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.data_request, RemoteCommands.data_request.Builder, RemoteCommands.data_requestOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private RemoteCommands.static_data toInit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.static_data, RemoteCommands.static_data.Builder, RemoteCommands.static_dataOrBuilder> toInitBuilder_;
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       * @return Whether the toInit field is set.
       */
      public boolean hasToInit() {
        return toInitBuilder_ != null || toInit_ != null;
      }
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       * @return The toInit.
       */
      public RemoteCommands.static_data getToInit() {
        if (toInitBuilder_ == null) {
          return toInit_ == null ? RemoteCommands.static_data.getDefaultInstance() : toInit_;
        } else {
          return toInitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       */
      public Builder setToInit(RemoteCommands.static_data value) {
        if (toInitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toInit_ = value;
          onChanged();
        } else {
          toInitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       */
      public Builder setToInit(
          RemoteCommands.static_data.Builder builderForValue) {
        if (toInitBuilder_ == null) {
          toInit_ = builderForValue.build();
          onChanged();
        } else {
          toInitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       */
      public Builder mergeToInit(RemoteCommands.static_data value) {
        if (toInitBuilder_ == null) {
          if (toInit_ != null) {
            toInit_ =
              RemoteCommands.static_data.newBuilder(toInit_).mergeFrom(value).buildPartial();
          } else {
            toInit_ = value;
          }
          onChanged();
        } else {
          toInitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       */
      public Builder clearToInit() {
        if (toInitBuilder_ == null) {
          toInit_ = null;
          onChanged();
        } else {
          toInit_ = null;
          toInitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       */
      public RemoteCommands.static_data.Builder getToInitBuilder() {
        
        onChanged();
        return getToInitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       */
      public RemoteCommands.static_dataOrBuilder getToInitOrBuilder() {
        if (toInitBuilder_ != null) {
          return toInitBuilder_.getMessageOrBuilder();
        } else {
          return toInit_ == null ?
              RemoteCommands.static_data.getDefaultInstance() : toInit_;
        }
      }
      /**
       * <pre>
       * static field object to be initalized on program start
       * </pre>
       *
       * <code>.static_data to_init = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RemoteCommands.static_data, RemoteCommands.static_data.Builder, RemoteCommands.static_dataOrBuilder> 
          getToInitFieldBuilder() {
        if (toInitBuilder_ == null) {
          toInitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RemoteCommands.static_data, RemoteCommands.static_data.Builder, RemoteCommands.static_dataOrBuilder>(
                  getToInit(),
                  getParentForChildren(),
                  isClean());
          toInit_ = null;
        }
        return toInitBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:remote_commands)
    }

    // @@protoc_insertion_point(class_scope:remote_commands)
    private static final RemoteCommands.remote_commands DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteCommands.remote_commands();
    }

    public static RemoteCommands.remote_commands getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<remote_commands>
        PARSER = new com.google.protobuf.AbstractParser<remote_commands>() {
      @java.lang.Override
      public remote_commands parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new remote_commands(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<remote_commands> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<remote_commands> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RemoteCommands.remote_commands getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vec2d_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vec2d_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_polygon_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_polygon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_static_data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_static_data_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_control_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_control_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_data_send_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_data_send_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_custom_control_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_custom_control_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_custom_task_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_custom_task_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_data_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_data_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_remote_commands_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_remote_commands_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025remote_commands.proto\"\035\n\005vec2d\022\t\n\001x\030\001 " +
      "\001(\002\022\t\n\001y\030\002 \001(\002\"#\n\007polygon\022\030\n\010vertices\030\001 " +
      "\003(\0132\006.vec2d\"\273\001\n\013static_data\022\033\n\tplay_area" +
      "\030\001 \001(\0132\010.polygon\022\036\n\014penalty_area\030\002 \001(\0132\010" +
      ".polygon\022\037\n\rcenter_circle\030\003 \001(\0132\010.polygo" +
      "n\022\035\n\013center_line\030\004 \001(\0132\010.polygon\022\033\n\tcros" +
      "s_bar\030\005 \001(\0132\010.polygon\022\022\n\nnum_robots\030\006 \001(" +
      "\005\"~\n\007control\022\030\n\010velocity\030\001 \001(\0132\006.vec2d\022\030" +
      "\n\020angular_velocity\030\002 \001(\002\022\024\n\014dribbler_pwr" +
      "\030\003 \001(\002\022\022\n\nkicker_pwr\030\004 \001(\002\022\025\n\rchippping_" +
      "pwr\030\005 \001(\002\"\211\001\n\tdata_send\022\035\n\rball_location" +
      "\030\001 \001(\0132\006.vec2d\022\037\n\017robot_locations\030\002 \003(\0132" +
      "\006.vec2d\022\032\n\022robot_orientations\030\003 \003(\002\022 \n\020r" +
      "obot_velocities\030\004 \003(\0132\006.vec2d\"8\n\016custom_" +
      "control\022\014\n\004name\030\001 \001(\t\022\030\n\020numerical_param" +
      "s\030\002 \003(\002\"h\n\013custom_task\022\014\n\004name\030\001 \001(\t\022\035\n\013" +
      "ctrl_params\030\002 \003(\0132\010.control\022\030\n\020numerical" +
      "_params\030\003 \003(\002\022\022\n\nstr_params\030\004 \003(\t\"c\n\014dat" +
      "a_request\022\014\n\004name\030\001 \001(\t\022\033\n\tctrl_data\030\002 \003" +
      "(\0132\010.control\022\026\n\016numerical_data\030\003 \003(\002\022\020\n\010" +
      "str_data\030\004 \003(\t\"\266\001\n\017remote_commands\022\014\n\004na" +
      "me\030\001 \001(\t\022\026\n\004ctrl\030\002 \001(\0132\010.control\022\"\n\tcust" +
      "_ctrl\030\003 \001(\0132\017.custom_control\022\032\n\004task\030\004 \001" +
      "(\0132\014.custom_task\022\036\n\007request\030\005 \001(\0132\r.data" +
      "_request\022\035\n\007to_init\030\006 \001(\0132\014.static_datab" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_vec2d_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_vec2d_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vec2d_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_polygon_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_polygon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_polygon_descriptor,
        new java.lang.String[] { "Vertices", });
    internal_static_static_data_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_static_data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_static_data_descriptor,
        new java.lang.String[] { "PlayArea", "PenaltyArea", "CenterCircle", "CenterLine", "CrossBar", "NumRobots", });
    internal_static_control_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_control_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_control_descriptor,
        new java.lang.String[] { "Velocity", "AngularVelocity", "DribblerPwr", "KickerPwr", "ChipppingPwr", });
    internal_static_data_send_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_data_send_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_data_send_descriptor,
        new java.lang.String[] { "BallLocation", "RobotLocations", "RobotOrientations", "RobotVelocities", });
    internal_static_custom_control_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_custom_control_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_custom_control_descriptor,
        new java.lang.String[] { "Name", "NumericalParams", });
    internal_static_custom_task_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_custom_task_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_custom_task_descriptor,
        new java.lang.String[] { "Name", "CtrlParams", "NumericalParams", "StrParams", });
    internal_static_data_request_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_data_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_data_request_descriptor,
        new java.lang.String[] { "Name", "CtrlData", "NumericalData", "StrData", });
    internal_static_remote_commands_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_remote_commands_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_remote_commands_descriptor,
        new java.lang.String[] { "Name", "Ctrl", "CustCtrl", "Task", "Request", "ToInit", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
